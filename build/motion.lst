ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"motion.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.Straight_Start,"ax",%progbits
  18              		.align	1
  19              		.global	Straight_Start
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	Straight_Start:
  26              	.LFB130:
  27              		.file 1 "Src/motion.c"
   1:Src/motion.c  **** #include "motion.h"
   2:Src/motion.c  **** #include "tim.h"
   3:Src/motion.c  **** #include "global.h"
   4:Src/motion.c  **** #include "control.h"
   5:Src/motion.c  **** #include "gpio.h"
   6:Src/motion.c  **** #include "spi.h"
   7:Src/motion.c  **** #include "maze.h"
   8:Src/motion.c  **** #include "function.h"
   9:Src/motion.c  **** 
  10:Src/motion.c  **** static unsigned char flag_kabeate;
  11:Src/motion.c  **** 
  12:Src/motion.c  **** void Normal_Turn_Half(void){
  13:Src/motion.c  ****     PT_Switch();
  14:Src/motion.c  ****     gyro_offset_calc_reset();
  15:Src/motion.c  ****     Yawrate_Calc_fb(180,0,0);
  16:Src/motion.c  ****     HAL_Delay(1500);
  17:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
  18:Src/motion.c  ****     flag.yawrate = ON;
  19:Src/motion.c  ****     while(1){
  20:Src/motion.c  ****         if(Push()==ON){
  21:Src/motion.c  ****             flag.yawrate = OFF;
  22:Src/motion.c  ****             Output_Buzzer(HZ_A);
  23:Src/motion.c  ****             break;
  24:Src/motion.c  ****         }
  25:Src/motion.c  ****     }
  26:Src/motion.c  **** }
  27:Src/motion.c  **** 
  28:Src/motion.c  **** /****************************************************************************************
  29:Src/motion.c  ****  * outline  : "ennkaigei"
  30:Src/motion.c  ****  * argument : void
  31:Src/motion.c  ****  * return   : void
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 2


  32:Src/motion.c  **** ********************************************************************************************/
  33:Src/motion.c  **** void Normal_Ennkai(void){
  34:Src/motion.c  ****     PT_Switch();
  35:Src/motion.c  ****     HAL_Delay(500);
  36:Src/motion.c  ****     gyro_offset_calc_reset();
  37:Src/motion.c  ****     Yawrate_Calc_Zero();
  38:Src/motion.c  ****     HAL_Delay(1500);
  39:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
  40:Src/motion.c  ****     flag.yawrate = ON;
  41:Src/motion.c  ****     while(1){
  42:Src/motion.c  ****         if(Push()==ON){
  43:Src/motion.c  ****             flag.yawrate = OFF;
  44:Src/motion.c  ****             Output_Buzzer(HZ_A);
  45:Src/motion.c  ****             break;
  46:Src/motion.c  ****         }
  47:Src/motion.c  ****     }
  48:Src/motion.c  **** }
  49:Src/motion.c  **** 
  50:Src/motion.c  **** void Ennkai(void){
  51:Src/motion.c  ****     PT_Switch();
  52:Src/motion.c  ****     HAL_Delay(500);
  53:Src/motion.c  ****     gyro_offset_calc_reset();
  54:Src/motion.c  ****     Yawrate_Calc_Zero();
  55:Src/motion.c  ****     Straight_Calc_Zero();
  56:Src/motion.c  ****     HAL_Delay(1500);
  57:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
  58:Src/motion.c  ****     flag.yawrate = ON;
  59:Src/motion.c  ****     flag.straight = ON;
  60:Src/motion.c  ****     while(1){
  61:Src/motion.c  ****         if(Push()==ON){
  62:Src/motion.c  ****             flag.yawrate = OFF;
  63:Src/motion.c  ****             flag.straight = OFF;
  64:Src/motion.c  ****             Output_Buzzer(HZ_A);
  65:Src/motion.c  ****             break;
  66:Src/motion.c  ****         }
  67:Src/motion.c  ****     }
  68:Src/motion.c  **** }
  69:Src/motion.c  **** 
  70:Src/motion.c  **** 
  71:Src/motion.c  **** /****************************************************************************************
  72:Src/motion.c  ****  * outline  : straight run one block by feadbuck control
  73:Src/motion.c  ****  * argument : void
  74:Src/motion.c  ****  * return   : void
  75:Src/motion.c  **** ********************************************************************************************/
  76:Src/motion.c  **** void Normal_Straight(void){
  77:Src/motion.c  ****     PT_Switch();
  78:Src/motion.c  ****     HAL_Delay(500);
  79:Src/motion.c  ****     Straight_Calc_fb(180,0,0);
  80:Src/motion.c  ****     HAL_Delay(1000);
  81:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
  82:Src/motion.c  ****     flag.straight = ON;
  83:Src/motion.c  ****     while(1){
  84:Src/motion.c  ****         if(Push()==ON){
  85:Src/motion.c  ****             flag.straight = OFF;
  86:Src/motion.c  ****             Output_Buzzer(HZ_A);
  87:Src/motion.c  ****             break;
  88:Src/motion.c  ****         }
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 3


  89:Src/motion.c  ****     }
  90:Src/motion.c  **** }
  91:Src/motion.c  **** 
  92:Src/motion.c  **** 
  93:Src/motion.c  **** /****************************************************************************************
  94:Src/motion.c  ****  * outline  : straight one block by encoder and gyro
  95:Src/motion.c  ****  * argument : void
  96:Src/motion.c  ****  * return   : void
  97:Src/motion.c  **** ********************************************************************************************/
  98:Src/motion.c  **** void Straight_Start(void){
  28              		.loc 1 98 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  99:Src/motion.c  ****     Straight_Calc_fb(136.4,0,0);
  37              		.loc 1 99 0
  38 0002 0022     		movs	r2, #0
  39 0004 1146     		mov	r1, r2
  40 0006 8820     		movs	r0, #136
  41 0008 FFF7FEFF 		bl	Straight_Calc_fb
  42              	.LVL0:
 100:Src/motion.c  ****     Yawrate_Calc_Zero();
  43              		.loc 1 100 0
  44 000c FFF7FEFF 		bl	Yawrate_Calc_Zero
  45              	.LVL1:
 101:Src/motion.c  ****     flag.straight = ON;
  46              		.loc 1 101 0
  47 0010 034B     		ldr	r3, .L3
  48 0012 0122     		movs	r2, #1
  49 0014 5A70     		strb	r2, [r3, #1]
 102:Src/motion.c  ****     flag.yawrate = ON;
  50              		.loc 1 102 0
  51 0016 9A70     		strb	r2, [r3, #2]
 103:Src/motion.c  ****     flag.wall = OFF;
  52              		.loc 1 103 0
  53 0018 0022     		movs	r2, #0
  54 001a 5A72     		strb	r2, [r3, #9]
 104:Src/motion.c  **** }
  55              		.loc 1 104 0
  56 001c 08BD     		pop	{r3, pc}
  57              	.L4:
  58 001e 00BF     		.align	2
  59              	.L3:
  60 0020 00000000 		.word	flag
  61              		.cfi_endproc
  62              	.LFE130:
  64              		.section	.text.Straight,"ax",%progbits
  65              		.align	1
  66              		.global	Straight
  67              		.syntax unified
  68              		.thumb
  69              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 4


  70              		.fpu fpv4-sp-d16
  72              	Straight:
  73              	.LFB131:
 105:Src/motion.c  **** 
 106:Src/motion.c  **** void Straight(void){
  74              		.loc 1 106 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 0, uses_anonymous_args = 0
  78 0000 08B5     		push	{r3, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
 107:Src/motion.c  ****     Straight_Calc_fb(180,0,0);
  83              		.loc 1 107 0
  84 0002 0022     		movs	r2, #0
  85 0004 1146     		mov	r1, r2
  86 0006 B420     		movs	r0, #180
  87 0008 FFF7FEFF 		bl	Straight_Calc_fb
  88              	.LVL2:
 108:Src/motion.c  ****     Yawrate_Calc_Zero();
  89              		.loc 1 108 0
  90 000c FFF7FEFF 		bl	Yawrate_Calc_Zero
  91              	.LVL3:
 109:Src/motion.c  ****     flag.straight = ON;
  92              		.loc 1 109 0
  93 0010 024B     		ldr	r3, .L7
  94 0012 0122     		movs	r2, #1
  95 0014 5A70     		strb	r2, [r3, #1]
 110:Src/motion.c  ****     flag.yawrate = ON;
  96              		.loc 1 110 0
  97 0016 9A70     		strb	r2, [r3, #2]
 111:Src/motion.c  ****     flag.wall = ON;
  98              		.loc 1 111 0
  99 0018 5A72     		strb	r2, [r3, #9]
 112:Src/motion.c  **** }
 100              		.loc 1 112 0
 101 001a 08BD     		pop	{r3, pc}
 102              	.L8:
 103              		.align	2
 104              	.L7:
 105 001c 00000000 		.word	flag
 106              		.cfi_endproc
 107              	.LFE131:
 109              		.section	.text.Straight_HalF,"ax",%progbits
 110              		.align	1
 111              		.global	Straight_HalF
 112              		.syntax unified
 113              		.thumb
 114              		.thumb_func
 115              		.fpu fpv4-sp-d16
 117              	Straight_HalF:
 118              	.LFB132:
 113:Src/motion.c  **** 
 114:Src/motion.c  **** void Straight_HalF(void){
 119              		.loc 1 114 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 5


 120              		.cfi_startproc
 121              		@ args = 0, pretend = 0, frame = 0
 122              		@ frame_needed = 0, uses_anonymous_args = 0
 123 0000 08B5     		push	{r3, lr}
 124              	.LCFI2:
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 3, -8
 127              		.cfi_offset 14, -4
 115:Src/motion.c  ****     Straight_Calc_fb(90,0,0);
 128              		.loc 1 115 0
 129 0002 0022     		movs	r2, #0
 130 0004 1146     		mov	r1, r2
 131 0006 5A20     		movs	r0, #90
 132 0008 FFF7FEFF 		bl	Straight_Calc_fb
 133              	.LVL4:
 116:Src/motion.c  ****     Yawrate_Calc_Zero();
 134              		.loc 1 116 0
 135 000c FFF7FEFF 		bl	Yawrate_Calc_Zero
 136              	.LVL5:
 117:Src/motion.c  ****     flag.straight = ON;
 137              		.loc 1 117 0
 138 0010 024B     		ldr	r3, .L11
 139 0012 0122     		movs	r2, #1
 140 0014 5A70     		strb	r2, [r3, #1]
 118:Src/motion.c  ****     flag.yawrate = ON;
 141              		.loc 1 118 0
 142 0016 9A70     		strb	r2, [r3, #2]
 119:Src/motion.c  ****     flag.wall = ON;
 143              		.loc 1 119 0
 144 0018 5A72     		strb	r2, [r3, #9]
 120:Src/motion.c  **** }
 145              		.loc 1 120 0
 146 001a 08BD     		pop	{r3, pc}
 147              	.L12:
 148              		.align	2
 149              	.L11:
 150 001c 00000000 		.word	flag
 151              		.cfi_endproc
 152              	.LFE132:
 154              		.section	.text.Turn_Half,"ax",%progbits
 155              		.align	1
 156              		.global	Turn_Half
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 160              		.fpu fpv4-sp-d16
 162              	Turn_Half:
 163              	.LFB133:
 121:Src/motion.c  **** 
 122:Src/motion.c  **** void Turn_Half(void){
 164              		.loc 1 122 0
 165              		.cfi_startproc
 166              		@ args = 0, pretend = 0, frame = 0
 167              		@ frame_needed = 0, uses_anonymous_args = 0
 168 0000 38B5     		push	{r3, r4, r5, lr}
 169              	.LCFI3:
 170              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 6


 171              		.cfi_offset 3, -16
 172              		.cfi_offset 4, -12
 173              		.cfi_offset 5, -8
 174              		.cfi_offset 14, -4
 123:Src/motion.c  ****     flag.dir = LEFT;
 175              		.loc 1 123 0
 176 0002 074C     		ldr	r4, .L15
 177 0004 0125     		movs	r5, #1
 178 0006 E580     		strh	r5, [r4, #6]	@ movhi
 124:Src/motion.c  ****     Yawrate_Calc_fb(180,0,0);
 179              		.loc 1 124 0
 180 0008 0022     		movs	r2, #0
 181 000a 1146     		mov	r1, r2
 182 000c B420     		movs	r0, #180
 183 000e FFF7FEFF 		bl	Yawrate_Calc_fb
 184              	.LVL6:
 125:Src/motion.c  ****     Straight_Calc_Zero();
 185              		.loc 1 125 0
 186 0012 FFF7FEFF 		bl	Straight_Calc_Zero
 187              	.LVL7:
 126:Src/motion.c  ****     flag.wall = OFF;
 188              		.loc 1 126 0
 189 0016 0023     		movs	r3, #0
 190 0018 6372     		strb	r3, [r4, #9]
 127:Src/motion.c  ****     flag.yawrate = ON;
 191              		.loc 1 127 0
 192 001a A570     		strb	r5, [r4, #2]
 128:Src/motion.c  ****     flag.straight = ON;
 193              		.loc 1 128 0
 194 001c 6570     		strb	r5, [r4, #1]
 129:Src/motion.c  **** }
 195              		.loc 1 129 0
 196 001e 38BD     		pop	{r3, r4, r5, pc}
 197              	.L16:
 198              		.align	2
 199              	.L15:
 200 0020 00000000 		.word	flag
 201              		.cfi_endproc
 202              	.LFE133:
 204              		.section	.text.Turn_Quarter_Left,"ax",%progbits
 205              		.align	1
 206              		.global	Turn_Quarter_Left
 207              		.syntax unified
 208              		.thumb
 209              		.thumb_func
 210              		.fpu fpv4-sp-d16
 212              	Turn_Quarter_Left:
 213              	.LFB134:
 130:Src/motion.c  **** 
 131:Src/motion.c  **** void Turn_Quarter_Left(void){
 214              		.loc 1 131 0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218 0000 38B5     		push	{r3, r4, r5, lr}
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 7


 221              		.cfi_offset 3, -16
 222              		.cfi_offset 4, -12
 223              		.cfi_offset 5, -8
 224              		.cfi_offset 14, -4
 132:Src/motion.c  ****     flag.dir = LEFT;
 225              		.loc 1 132 0
 226 0002 074C     		ldr	r4, .L19
 227 0004 0125     		movs	r5, #1
 228 0006 E580     		strh	r5, [r4, #6]	@ movhi
 133:Src/motion.c  ****     Yawrate_Calc_fb(90,0,0);
 229              		.loc 1 133 0
 230 0008 0022     		movs	r2, #0
 231 000a 1146     		mov	r1, r2
 232 000c 5A20     		movs	r0, #90
 233 000e FFF7FEFF 		bl	Yawrate_Calc_fb
 234              	.LVL8:
 134:Src/motion.c  ****     Straight_Calc_Zero();
 235              		.loc 1 134 0
 236 0012 FFF7FEFF 		bl	Straight_Calc_Zero
 237              	.LVL9:
 135:Src/motion.c  ****     flag.wall = OFF;
 238              		.loc 1 135 0
 239 0016 0023     		movs	r3, #0
 240 0018 6372     		strb	r3, [r4, #9]
 136:Src/motion.c  ****     flag.yawrate = ON;
 241              		.loc 1 136 0
 242 001a A570     		strb	r5, [r4, #2]
 137:Src/motion.c  ****     flag.straight = ON;
 243              		.loc 1 137 0
 244 001c 6570     		strb	r5, [r4, #1]
 138:Src/motion.c  **** }
 245              		.loc 1 138 0
 246 001e 38BD     		pop	{r3, r4, r5, pc}
 247              	.L20:
 248              		.align	2
 249              	.L19:
 250 0020 00000000 		.word	flag
 251              		.cfi_endproc
 252              	.LFE134:
 254              		.section	.text.Turn_Quarter_Right,"ax",%progbits
 255              		.align	1
 256              		.global	Turn_Quarter_Right
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	Turn_Quarter_Right:
 263              	.LFB135:
 139:Src/motion.c  **** 
 140:Src/motion.c  **** void Turn_Quarter_Right(void){
 264              		.loc 1 140 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 10B5     		push	{r4, lr}
 269              	.LCFI5:
 270              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 8


 271              		.cfi_offset 4, -8
 272              		.cfi_offset 14, -4
 141:Src/motion.c  ****     flag.dir = RIGHT;
 273              		.loc 1 141 0
 274 0002 084C     		ldr	r4, .L23
 275 0004 4FF6FF73 		movw	r3, #65535
 276 0008 E380     		strh	r3, [r4, #6]	@ movhi
 142:Src/motion.c  ****     Yawrate_Calc_fb(90,0,0);
 277              		.loc 1 142 0
 278 000a 0022     		movs	r2, #0
 279 000c 1146     		mov	r1, r2
 280 000e 5A20     		movs	r0, #90
 281 0010 FFF7FEFF 		bl	Yawrate_Calc_fb
 282              	.LVL10:
 143:Src/motion.c  ****     Straight_Calc_Zero();
 283              		.loc 1 143 0
 284 0014 FFF7FEFF 		bl	Straight_Calc_Zero
 285              	.LVL11:
 144:Src/motion.c  ****     flag.wall = OFF;
 286              		.loc 1 144 0
 287 0018 0023     		movs	r3, #0
 288 001a 6372     		strb	r3, [r4, #9]
 145:Src/motion.c  ****     flag.yawrate = ON;
 289              		.loc 1 145 0
 290 001c 0123     		movs	r3, #1
 291 001e A370     		strb	r3, [r4, #2]
 146:Src/motion.c  ****     flag.straight = ON;
 292              		.loc 1 146 0
 293 0020 6370     		strb	r3, [r4, #1]
 147:Src/motion.c  **** }
 294              		.loc 1 147 0
 295 0022 10BD     		pop	{r4, pc}
 296              	.L24:
 297              		.align	2
 298              	.L23:
 299 0024 00000000 		.word	flag
 300              		.cfi_endproc
 301              	.LFE135:
 303              		.section	.text.Back,"ax",%progbits
 304              		.align	1
 305              		.global	Back
 306              		.syntax unified
 307              		.thumb
 308              		.thumb_func
 309              		.fpu fpv4-sp-d16
 311              	Back:
 312              	.LFB136:
 148:Src/motion.c  **** 
 149:Src/motion.c  **** void Back(void){
 313              		.loc 1 149 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317 0000 08B5     		push	{r3, lr}
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 3, -8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 9


 321              		.cfi_offset 14, -4
 150:Src/motion.c  ****     Straight_Calc_fb(-55,0,0);
 322              		.loc 1 150 0
 323 0002 0022     		movs	r2, #0
 324 0004 1146     		mov	r1, r2
 325 0006 6FF03600 		mvn	r0, #54
 326 000a FFF7FEFF 		bl	Straight_Calc_fb
 327              	.LVL12:
 151:Src/motion.c  ****     Yawrate_Calc_Zero();
 328              		.loc 1 151 0
 329 000e FFF7FEFF 		bl	Yawrate_Calc_Zero
 330              	.LVL13:
 152:Src/motion.c  ****     flag.wall = OFF;
 331              		.loc 1 152 0
 332 0012 034B     		ldr	r3, .L27
 333 0014 0022     		movs	r2, #0
 334 0016 5A72     		strb	r2, [r3, #9]
 153:Src/motion.c  ****     flag.straight = ON;
 335              		.loc 1 153 0
 336 0018 0122     		movs	r2, #1
 337 001a 5A70     		strb	r2, [r3, #1]
 154:Src/motion.c  ****     flag.yawrate = ON;
 338              		.loc 1 154 0
 339 001c 9A70     		strb	r2, [r3, #2]
 155:Src/motion.c  **** }
 340              		.loc 1 155 0
 341 001e 08BD     		pop	{r3, pc}
 342              	.L28:
 343              		.align	2
 344              	.L27:
 345 0020 00000000 		.word	flag
 346              		.cfi_endproc
 347              	.LFE136:
 349              		.section	.text.Straight_Check,"ax",%progbits
 350              		.align	1
 351              		.global	Straight_Check
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	Straight_Check:
 358              	.LFB137:
 156:Src/motion.c  **** 
 157:Src/motion.c  **** void Straight_Check(void){
 359              		.loc 1 157 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI7:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 158:Src/motion.c  ****     Straight_Calc_fb(1080,0,0);
 368              		.loc 1 158 0
 369 0002 0022     		movs	r2, #0
 370 0004 1146     		mov	r1, r2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 10


 371 0006 4FF48760 		mov	r0, #1080
 372 000a FFF7FEFF 		bl	Straight_Calc_fb
 373              	.LVL14:
 159:Src/motion.c  ****     Yawrate_Calc_Zero();
 374              		.loc 1 159 0
 375 000e FFF7FEFF 		bl	Yawrate_Calc_Zero
 376              	.LVL15:
 160:Src/motion.c  ****     HAL_Delay(10);
 377              		.loc 1 160 0
 378 0012 0A20     		movs	r0, #10
 379 0014 FFF7FEFF 		bl	HAL_Delay
 380              	.LVL16:
 161:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 381              		.loc 1 161 0
 382 0018 4C20     		movs	r0, #76
 383 001a FFF7FEFF 		bl	Output_Buzzer
 384              	.LVL17:
 162:Src/motion.c  ****     flag.straight = ON;
 385              		.loc 1 162 0
 386 001e 034B     		ldr	r3, .L31
 387 0020 0122     		movs	r2, #1
 388 0022 5A70     		strb	r2, [r3, #1]
 163:Src/motion.c  ****     flag.wall=OFF;
 389              		.loc 1 163 0
 390 0024 0021     		movs	r1, #0
 391 0026 5972     		strb	r1, [r3, #9]
 164:Src/motion.c  ****     flag.yawrate = ON;
 392              		.loc 1 164 0
 393 0028 9A70     		strb	r2, [r3, #2]
 165:Src/motion.c  **** }
 394              		.loc 1 165 0
 395 002a 08BD     		pop	{r3, pc}
 396              	.L32:
 397              		.align	2
 398              	.L31:
 399 002c 00000000 		.word	flag
 400              		.cfi_endproc
 401              	.LFE137:
 403              		.section	.text.Motion_Start,"ax",%progbits
 404              		.align	1
 405              		.global	Motion_Start
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	Motion_Start:
 412              	.LFB138:
 166:Src/motion.c  **** 
 167:Src/motion.c  **** void Motion_Start(void){
 413              		.loc 1 167 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI8:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 11


 421              		.cfi_offset 14, -4
 168:Src/motion.c  ****     Back();
 422              		.loc 1 168 0
 423 0002 FFF7FEFF 		bl	Back
 424              	.LVL18:
 425              	.L34:
 169:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 426              		.loc 1 169 0 discriminator 3
 427 0006 0F4B     		ldr	r3, .L39
 428 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 429 000a DBB2     		uxtb	r3, r3
 430 000c 012B     		cmp	r3, #1
 431 000e FAD0     		beq	.L34
 432              		.loc 1 169 0 is_stmt 0 discriminator 2
 433 0010 0C4B     		ldr	r3, .L39
 434 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 435 0014 DBB2     		uxtb	r3, r3
 436 0016 012B     		cmp	r3, #1
 437 0018 F5D0     		beq	.L34
 170:Src/motion.c  ****     HAL_Delay(500);
 438              		.loc 1 170 0 is_stmt 1
 439 001a 4FF4FA70 		mov	r0, #500
 440 001e FFF7FEFF 		bl	HAL_Delay
 441              	.LVL19:
 171:Src/motion.c  ****     Straight_Start();
 442              		.loc 1 171 0
 443 0022 FFF7FEFF 		bl	Straight_Start
 444              	.LVL20:
 445              	.L36:
 172:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 446              		.loc 1 172 0 discriminator 3
 447 0026 074B     		ldr	r3, .L39
 448 0028 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 449 002a DBB2     		uxtb	r3, r3
 450 002c 012B     		cmp	r3, #1
 451 002e FAD0     		beq	.L36
 452              		.loc 1 172 0 is_stmt 0 discriminator 2
 453 0030 044B     		ldr	r3, .L39
 454 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 455 0034 DBB2     		uxtb	r3, r3
 456 0036 012B     		cmp	r3, #1
 457 0038 F5D0     		beq	.L36
 173:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 458              		.loc 1 173 0 is_stmt 1
 459 003a 4C20     		movs	r0, #76
 460 003c FFF7FEFF 		bl	Output_Buzzer
 461              	.LVL21:
 174:Src/motion.c  **** }
 462              		.loc 1 174 0
 463 0040 08BD     		pop	{r3, pc}
 464              	.L40:
 465 0042 00BF     		.align	2
 466              	.L39:
 467 0044 00000000 		.word	flag
 468              		.cfi_endproc
 469              	.LFE138:
 471              		.section	.text.Motion_Straight,"ax",%progbits
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 12


 472              		.align	1
 473              		.global	Motion_Straight
 474              		.syntax unified
 475              		.thumb
 476              		.thumb_func
 477              		.fpu fpv4-sp-d16
 479              	Motion_Straight:
 480              	.LFB139:
 175:Src/motion.c  **** 
 176:Src/motion.c  **** void Motion_Straight(void){
 481              		.loc 1 176 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 0, uses_anonymous_args = 0
 485 0000 08B5     		push	{r3, lr}
 486              	.LCFI9:
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 3, -8
 489              		.cfi_offset 14, -4
 177:Src/motion.c  ****     Straight();
 490              		.loc 1 177 0
 491 0002 FFF7FEFF 		bl	Straight
 492              	.LVL22:
 493              	.L42:
 178:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 494              		.loc 1 178 0 discriminator 3
 495 0006 074B     		ldr	r3, .L45
 496 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 497 000a DBB2     		uxtb	r3, r3
 498 000c 012B     		cmp	r3, #1
 499 000e FAD0     		beq	.L42
 500              		.loc 1 178 0 is_stmt 0 discriminator 2
 501 0010 044B     		ldr	r3, .L45
 502 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 503 0014 DBB2     		uxtb	r3, r3
 504 0016 012B     		cmp	r3, #1
 505 0018 F5D0     		beq	.L42
 179:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 506              		.loc 1 179 0 is_stmt 1
 507 001a 4C20     		movs	r0, #76
 508 001c FFF7FEFF 		bl	Output_Buzzer
 509              	.LVL23:
 180:Src/motion.c  **** }
 510              		.loc 1 180 0
 511 0020 08BD     		pop	{r3, pc}
 512              	.L46:
 513 0022 00BF     		.align	2
 514              	.L45:
 515 0024 00000000 		.word	flag
 516              		.cfi_endproc
 517              	.LFE139:
 519              		.section	.text.Motion_Left,"ax",%progbits
 520              		.align	1
 521              		.global	Motion_Left
 522              		.syntax unified
 523              		.thumb
 524              		.thumb_func
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 13


 525              		.fpu fpv4-sp-d16
 527              	Motion_Left:
 528              	.LFB140:
 181:Src/motion.c  **** 
 182:Src/motion.c  **** void Motion_Left(void){
 529              		.loc 1 182 0
 530              		.cfi_startproc
 531              		@ args = 0, pretend = 0, frame = 0
 532              		@ frame_needed = 0, uses_anonymous_args = 0
 533 0000 08B5     		push	{r3, lr}
 534              	.LCFI10:
 535              		.cfi_def_cfa_offset 8
 536              		.cfi_offset 3, -8
 537              		.cfi_offset 14, -4
 183:Src/motion.c  ****     Straight_HalF();
 538              		.loc 1 183 0
 539 0002 FFF7FEFF 		bl	Straight_HalF
 540              	.LVL24:
 541              	.L48:
 184:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 542              		.loc 1 184 0 discriminator 3
 543 0006 174B     		ldr	r3, .L55
 544 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 545 000a DBB2     		uxtb	r3, r3
 546 000c 012B     		cmp	r3, #1
 547 000e FAD0     		beq	.L48
 548              		.loc 1 184 0 is_stmt 0 discriminator 2
 549 0010 144B     		ldr	r3, .L55
 550 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 551 0014 DBB2     		uxtb	r3, r3
 552 0016 012B     		cmp	r3, #1
 553 0018 F5D0     		beq	.L48
 185:Src/motion.c  ****     HAL_Delay(500);
 554              		.loc 1 185 0 is_stmt 1
 555 001a 4FF4FA70 		mov	r0, #500
 556 001e FFF7FEFF 		bl	HAL_Delay
 557              	.LVL25:
 186:Src/motion.c  ****     Turn_Quarter_Left();
 558              		.loc 1 186 0
 559 0022 FFF7FEFF 		bl	Turn_Quarter_Left
 560              	.LVL26:
 561              	.L50:
 187:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 562              		.loc 1 187 0 discriminator 3
 563 0026 0F4B     		ldr	r3, .L55
 564 0028 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 565 002a DBB2     		uxtb	r3, r3
 566 002c 012B     		cmp	r3, #1
 567 002e FAD0     		beq	.L50
 568              		.loc 1 187 0 is_stmt 0 discriminator 2
 569 0030 0C4B     		ldr	r3, .L55
 570 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 571 0034 DBB2     		uxtb	r3, r3
 572 0036 012B     		cmp	r3, #1
 573 0038 F5D0     		beq	.L50
 188:Src/motion.c  ****     HAL_Delay(500);
 574              		.loc 1 188 0 is_stmt 1
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 14


 575 003a 4FF4FA70 		mov	r0, #500
 576 003e FFF7FEFF 		bl	HAL_Delay
 577              	.LVL27:
 189:Src/motion.c  ****     Straight_HalF();
 578              		.loc 1 189 0
 579 0042 FFF7FEFF 		bl	Straight_HalF
 580              	.LVL28:
 581              	.L52:
 190:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 582              		.loc 1 190 0 discriminator 3
 583 0046 074B     		ldr	r3, .L55
 584 0048 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 585 004a DBB2     		uxtb	r3, r3
 586 004c 012B     		cmp	r3, #1
 587 004e FAD0     		beq	.L52
 588              		.loc 1 190 0 is_stmt 0 discriminator 2
 589 0050 044B     		ldr	r3, .L55
 590 0052 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 591 0054 DBB2     		uxtb	r3, r3
 592 0056 012B     		cmp	r3, #1
 593 0058 F5D0     		beq	.L52
 191:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 594              		.loc 1 191 0 is_stmt 1
 595 005a 4C20     		movs	r0, #76
 596 005c FFF7FEFF 		bl	Output_Buzzer
 597              	.LVL29:
 192:Src/motion.c  **** }
 598              		.loc 1 192 0
 599 0060 08BD     		pop	{r3, pc}
 600              	.L56:
 601 0062 00BF     		.align	2
 602              	.L55:
 603 0064 00000000 		.word	flag
 604              		.cfi_endproc
 605              	.LFE140:
 607              		.section	.text.Motion_Right,"ax",%progbits
 608              		.align	1
 609              		.global	Motion_Right
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 613              		.fpu fpv4-sp-d16
 615              	Motion_Right:
 616              	.LFB141:
 193:Src/motion.c  **** 
 194:Src/motion.c  **** void Motion_Right(void){
 617              		.loc 1 194 0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621 0000 08B5     		push	{r3, lr}
 622              	.LCFI11:
 623              		.cfi_def_cfa_offset 8
 624              		.cfi_offset 3, -8
 625              		.cfi_offset 14, -4
 195:Src/motion.c  ****     Straight_HalF();
 626              		.loc 1 195 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 15


 627 0002 FFF7FEFF 		bl	Straight_HalF
 628              	.LVL30:
 629              	.L58:
 196:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 630              		.loc 1 196 0 discriminator 3
 631 0006 174B     		ldr	r3, .L65
 632 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 633 000a DBB2     		uxtb	r3, r3
 634 000c 012B     		cmp	r3, #1
 635 000e FAD0     		beq	.L58
 636              		.loc 1 196 0 is_stmt 0 discriminator 2
 637 0010 144B     		ldr	r3, .L65
 638 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 639 0014 DBB2     		uxtb	r3, r3
 640 0016 012B     		cmp	r3, #1
 641 0018 F5D0     		beq	.L58
 197:Src/motion.c  ****     HAL_Delay(500);
 642              		.loc 1 197 0 is_stmt 1
 643 001a 4FF4FA70 		mov	r0, #500
 644 001e FFF7FEFF 		bl	HAL_Delay
 645              	.LVL31:
 198:Src/motion.c  ****     Turn_Quarter_Right();
 646              		.loc 1 198 0
 647 0022 FFF7FEFF 		bl	Turn_Quarter_Right
 648              	.LVL32:
 649              	.L60:
 199:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 650              		.loc 1 199 0 discriminator 3
 651 0026 0F4B     		ldr	r3, .L65
 652 0028 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 653 002a DBB2     		uxtb	r3, r3
 654 002c 012B     		cmp	r3, #1
 655 002e FAD0     		beq	.L60
 656              		.loc 1 199 0 is_stmt 0 discriminator 2
 657 0030 0C4B     		ldr	r3, .L65
 658 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 659 0034 DBB2     		uxtb	r3, r3
 660 0036 012B     		cmp	r3, #1
 661 0038 F5D0     		beq	.L60
 200:Src/motion.c  ****     HAL_Delay(500);
 662              		.loc 1 200 0 is_stmt 1
 663 003a 4FF4FA70 		mov	r0, #500
 664 003e FFF7FEFF 		bl	HAL_Delay
 665              	.LVL33:
 201:Src/motion.c  ****     Straight_HalF();
 666              		.loc 1 201 0
 667 0042 FFF7FEFF 		bl	Straight_HalF
 668              	.LVL34:
 669              	.L62:
 202:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 670              		.loc 1 202 0 discriminator 3
 671 0046 074B     		ldr	r3, .L65
 672 0048 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 673 004a DBB2     		uxtb	r3, r3
 674 004c 012B     		cmp	r3, #1
 675 004e FAD0     		beq	.L62
 676              		.loc 1 202 0 is_stmt 0 discriminator 2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 16


 677 0050 044B     		ldr	r3, .L65
 678 0052 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 679 0054 DBB2     		uxtb	r3, r3
 680 0056 012B     		cmp	r3, #1
 681 0058 F5D0     		beq	.L62
 203:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 682              		.loc 1 203 0 is_stmt 1
 683 005a 4C20     		movs	r0, #76
 684 005c FFF7FEFF 		bl	Output_Buzzer
 685              	.LVL35:
 204:Src/motion.c  **** }
 686              		.loc 1 204 0
 687 0060 08BD     		pop	{r3, pc}
 688              	.L66:
 689 0062 00BF     		.align	2
 690              	.L65:
 691 0064 00000000 		.word	flag
 692              		.cfi_endproc
 693              	.LFE141:
 695              		.section	.text.Motion_Uturn,"ax",%progbits
 696              		.align	1
 697              		.global	Motion_Uturn
 698              		.syntax unified
 699              		.thumb
 700              		.thumb_func
 701              		.fpu fpv4-sp-d16
 703              	Motion_Uturn:
 704              	.LFB142:
 205:Src/motion.c  **** 
 206:Src/motion.c  **** void Motion_Uturn(void){
 705              		.loc 1 206 0
 706              		.cfi_startproc
 707              		@ args = 0, pretend = 0, frame = 0
 708              		@ frame_needed = 0, uses_anonymous_args = 0
 709 0000 08B5     		push	{r3, lr}
 710              	.LCFI12:
 711              		.cfi_def_cfa_offset 8
 712              		.cfi_offset 3, -8
 713              		.cfi_offset 14, -4
 207:Src/motion.c  ****     Straight_HalF();
 714              		.loc 1 207 0
 715 0002 FFF7FEFF 		bl	Straight_HalF
 716              	.LVL36:
 717              	.L68:
 208:Src/motion.c  ****     while( flag.accel==ON || flag.straight==ON ){}
 718              		.loc 1 208 0 discriminator 3
 719 0006 174B     		ldr	r3, .L75
 720 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 721 000a DBB2     		uxtb	r3, r3
 722 000c 012B     		cmp	r3, #1
 723 000e FAD0     		beq	.L68
 724              		.loc 1 208 0 is_stmt 0 discriminator 2
 725 0010 144B     		ldr	r3, .L75
 726 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 727 0014 DBB2     		uxtb	r3, r3
 728 0016 012B     		cmp	r3, #1
 729 0018 F5D0     		beq	.L68
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 17


 209:Src/motion.c  ****     HAL_Delay(500);
 730              		.loc 1 209 0 is_stmt 1
 731 001a 4FF4FA70 		mov	r0, #500
 732 001e FFF7FEFF 		bl	HAL_Delay
 733              	.LVL37:
 210:Src/motion.c  ****     Turn_Half();
 734              		.loc 1 210 0
 735 0022 FFF7FEFF 		bl	Turn_Half
 736              	.LVL38:
 737              	.L70:
 211:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 738              		.loc 1 211 0 discriminator 3
 739 0026 0F4B     		ldr	r3, .L75
 740 0028 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 741 002a DBB2     		uxtb	r3, r3
 742 002c 012B     		cmp	r3, #1
 743 002e FAD0     		beq	.L70
 744              		.loc 1 211 0 is_stmt 0 discriminator 2
 745 0030 0C4B     		ldr	r3, .L75
 746 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 747 0034 DBB2     		uxtb	r3, r3
 748 0036 012B     		cmp	r3, #1
 749 0038 F5D0     		beq	.L70
 212:Src/motion.c  ****     HAL_Delay(500);
 750              		.loc 1 212 0 is_stmt 1
 751 003a 4FF4FA70 		mov	r0, #500
 752 003e FFF7FEFF 		bl	HAL_Delay
 753              	.LVL39:
 213:Src/motion.c  ****     Straight_HalF();
 754              		.loc 1 213 0
 755 0042 FFF7FEFF 		bl	Straight_HalF
 756              	.LVL40:
 757              	.L72:
 214:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 758              		.loc 1 214 0 discriminator 3
 759 0046 074B     		ldr	r3, .L75
 760 0048 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 761 004a DBB2     		uxtb	r3, r3
 762 004c 012B     		cmp	r3, #1
 763 004e FAD0     		beq	.L72
 764              		.loc 1 214 0 is_stmt 0 discriminator 2
 765 0050 044B     		ldr	r3, .L75
 766 0052 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 767 0054 DBB2     		uxtb	r3, r3
 768 0056 012B     		cmp	r3, #1
 769 0058 F5D0     		beq	.L72
 215:Src/motion.c  ****     
 216:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 770              		.loc 1 216 0 is_stmt 1
 771 005a 4C20     		movs	r0, #76
 772 005c FFF7FEFF 		bl	Output_Buzzer
 773              	.LVL41:
 217:Src/motion.c  **** }
 774              		.loc 1 217 0
 775 0060 08BD     		pop	{r3, pc}
 776              	.L76:
 777 0062 00BF     		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 18


 778              	.L75:
 779 0064 00000000 		.word	flag
 780              		.cfi_endproc
 781              	.LFE142:
 783              		.section	.text.Motion_Kabeate,"ax",%progbits
 784              		.align	1
 785              		.global	Motion_Kabeate
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 789              		.fpu fpv4-sp-d16
 791              	Motion_Kabeate:
 792              	.LFB143:
 218:Src/motion.c  **** 
 219:Src/motion.c  **** void Motion_Kabeate(void){
 793              		.loc 1 219 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797 0000 08B5     		push	{r3, lr}
 798              	.LCFI13:
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 3, -8
 801              		.cfi_offset 14, -4
 220:Src/motion.c  ****     Straight_HalF();
 802              		.loc 1 220 0
 803 0002 FFF7FEFF 		bl	Straight_HalF
 804              	.LVL42:
 805              	.L78:
 221:Src/motion.c  ****     while( flag.accel==ON || flag.straight==ON ){}
 806              		.loc 1 221 0 discriminator 3
 807 0006 1F4B     		ldr	r3, .L87
 808 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 809 000a DBB2     		uxtb	r3, r3
 810 000c 012B     		cmp	r3, #1
 811 000e FAD0     		beq	.L78
 812              		.loc 1 221 0 is_stmt 0 discriminator 2
 813 0010 1C4B     		ldr	r3, .L87
 814 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 815 0014 DBB2     		uxtb	r3, r3
 816 0016 012B     		cmp	r3, #1
 817 0018 F5D0     		beq	.L78
 222:Src/motion.c  ****     HAL_Delay(500);
 818              		.loc 1 222 0 is_stmt 1
 819 001a 4FF4FA70 		mov	r0, #500
 820 001e FFF7FEFF 		bl	HAL_Delay
 821              	.LVL43:
 223:Src/motion.c  ****     Turn_Half();
 822              		.loc 1 223 0
 823 0022 FFF7FEFF 		bl	Turn_Half
 824              	.LVL44:
 825              	.L80:
 224:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 826              		.loc 1 224 0 discriminator 3
 827 0026 174B     		ldr	r3, .L87
 828 0028 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 829 002a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 19


 830 002c 012B     		cmp	r3, #1
 831 002e FAD0     		beq	.L80
 832              		.loc 1 224 0 is_stmt 0 discriminator 2
 833 0030 144B     		ldr	r3, .L87
 834 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 835 0034 DBB2     		uxtb	r3, r3
 836 0036 012B     		cmp	r3, #1
 837 0038 F5D0     		beq	.L80
 225:Src/motion.c  ****     HAL_Delay(500);
 838              		.loc 1 225 0 is_stmt 1
 839 003a 4FF4FA70 		mov	r0, #500
 840 003e FFF7FEFF 		bl	HAL_Delay
 841              	.LVL45:
 226:Src/motion.c  ****     Back();
 842              		.loc 1 226 0
 843 0042 FFF7FEFF 		bl	Back
 844              	.LVL46:
 845              	.L82:
 227:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 846              		.loc 1 227 0 discriminator 3
 847 0046 0F4B     		ldr	r3, .L87
 848 0048 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 849 004a DBB2     		uxtb	r3, r3
 850 004c 012B     		cmp	r3, #1
 851 004e FAD0     		beq	.L82
 852              		.loc 1 227 0 is_stmt 0 discriminator 2
 853 0050 0C4B     		ldr	r3, .L87
 854 0052 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 855 0054 DBB2     		uxtb	r3, r3
 856 0056 012B     		cmp	r3, #1
 857 0058 F5D0     		beq	.L82
 228:Src/motion.c  ****     HAL_Delay(500);
 858              		.loc 1 228 0 is_stmt 1
 859 005a 4FF4FA70 		mov	r0, #500
 860 005e FFF7FEFF 		bl	HAL_Delay
 861              	.LVL47:
 229:Src/motion.c  ****     Straight_Start();
 862              		.loc 1 229 0
 863 0062 FFF7FEFF 		bl	Straight_Start
 864              	.LVL48:
 865              	.L84:
 230:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 866              		.loc 1 230 0 discriminator 3
 867 0066 074B     		ldr	r3, .L87
 868 0068 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 869 006a DBB2     		uxtb	r3, r3
 870 006c 012B     		cmp	r3, #1
 871 006e FAD0     		beq	.L84
 872              		.loc 1 230 0 is_stmt 0 discriminator 2
 873 0070 044B     		ldr	r3, .L87
 874 0072 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 875 0074 DBB2     		uxtb	r3, r3
 876 0076 012B     		cmp	r3, #1
 877 0078 F5D0     		beq	.L84
 231:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 878              		.loc 1 231 0 is_stmt 1
 879 007a 4C20     		movs	r0, #76
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 20


 880 007c FFF7FEFF 		bl	Output_Buzzer
 881              	.LVL49:
 232:Src/motion.c  **** }
 882              		.loc 1 232 0
 883 0080 08BD     		pop	{r3, pc}
 884              	.L88:
 885 0082 00BF     		.align	2
 886              	.L87:
 887 0084 00000000 		.word	flag
 888              		.cfi_endproc
 889              	.LFE143:
 891              		.section	.text.Motion_Goal,"ax",%progbits
 892              		.align	1
 893              		.global	Motion_Goal
 894              		.syntax unified
 895              		.thumb
 896              		.thumb_func
 897              		.fpu fpv4-sp-d16
 899              	Motion_Goal:
 900              	.LFB144:
 233:Src/motion.c  **** 
 234:Src/motion.c  **** void Motion_Goal(void){
 901              		.loc 1 234 0
 902              		.cfi_startproc
 903              		@ args = 0, pretend = 0, frame = 0
 904              		@ frame_needed = 0, uses_anonymous_args = 0
 905 0000 08B5     		push	{r3, lr}
 906              	.LCFI14:
 907              		.cfi_def_cfa_offset 8
 908              		.cfi_offset 3, -8
 909              		.cfi_offset 14, -4
 235:Src/motion.c  ****     Straight_Start();
 910              		.loc 1 235 0
 911 0002 FFF7FEFF 		bl	Straight_Start
 912              	.LVL50:
 913              	.L90:
 236:Src/motion.c  ****     while( flag.accel==ON || flag.straight==ON ){}
 914              		.loc 1 236 0 discriminator 3
 915 0006 074B     		ldr	r3, .L93
 916 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 917 000a DBB2     		uxtb	r3, r3
 918 000c 012B     		cmp	r3, #1
 919 000e FAD0     		beq	.L90
 920              		.loc 1 236 0 is_stmt 0 discriminator 2
 921 0010 044B     		ldr	r3, .L93
 922 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 923 0014 DBB2     		uxtb	r3, r3
 924 0016 012B     		cmp	r3, #1
 925 0018 F5D0     		beq	.L90
 237:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 926              		.loc 1 237 0 is_stmt 1
 927 001a 4C20     		movs	r0, #76
 928 001c FFF7FEFF 		bl	Output_Buzzer
 929              	.LVL51:
 238:Src/motion.c  **** }
 930              		.loc 1 238 0
 931 0020 08BD     		pop	{r3, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 21


 932              	.L94:
 933 0022 00BF     		.align	2
 934              	.L93:
 935 0024 00000000 		.word	flag
 936              		.cfi_endproc
 937              	.LFE144:
 939              		.section	.text.Motion_Straight_Check,"ax",%progbits
 940              		.align	1
 941              		.global	Motion_Straight_Check
 942              		.syntax unified
 943              		.thumb
 944              		.thumb_func
 945              		.fpu fpv4-sp-d16
 947              	Motion_Straight_Check:
 948              	.LFB145:
 239:Src/motion.c  **** 
 240:Src/motion.c  **** void Motion_Straight_Check(void){
 949              		.loc 1 240 0
 950              		.cfi_startproc
 951              		@ args = 0, pretend = 0, frame = 0
 952              		@ frame_needed = 0, uses_anonymous_args = 0
 953 0000 08B5     		push	{r3, lr}
 954              	.LCFI15:
 955              		.cfi_def_cfa_offset 8
 956              		.cfi_offset 3, -8
 957              		.cfi_offset 14, -4
 241:Src/motion.c  ****     Straight_Check();
 958              		.loc 1 241 0
 959 0002 FFF7FEFF 		bl	Straight_Check
 960              	.LVL52:
 961              	.L96:
 242:Src/motion.c  ****     while( flag.accel==ON || flag.straight==ON ){}
 962              		.loc 1 242 0 discriminator 3
 963 0006 054B     		ldr	r3, .L99
 964 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 965 000a DBB2     		uxtb	r3, r3
 966 000c 012B     		cmp	r3, #1
 967 000e FAD0     		beq	.L96
 968              		.loc 1 242 0 is_stmt 0 discriminator 2
 969 0010 024B     		ldr	r3, .L99
 970 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 971 0014 DBB2     		uxtb	r3, r3
 972 0016 012B     		cmp	r3, #1
 973 0018 F5D0     		beq	.L96
 243:Src/motion.c  **** }
 974              		.loc 1 243 0 is_stmt 1
 975 001a 08BD     		pop	{r3, pc}
 976              	.L100:
 977              		.align	2
 978              	.L99:
 979 001c 00000000 		.word	flag
 980              		.cfi_endproc
 981              	.LFE145:
 983              		.section	.text.Motion_Back,"ax",%progbits
 984              		.align	1
 985              		.global	Motion_Back
 986              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 22


 987              		.thumb
 988              		.thumb_func
 989              		.fpu fpv4-sp-d16
 991              	Motion_Back:
 992              	.LFB146:
 244:Src/motion.c  **** 
 245:Src/motion.c  **** void Motion_Back(void){
 993              		.loc 1 245 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 0
 996              		@ frame_needed = 0, uses_anonymous_args = 0
 997 0000 08B5     		push	{r3, lr}
 998              	.LCFI16:
 999              		.cfi_def_cfa_offset 8
 1000              		.cfi_offset 3, -8
 1001              		.cfi_offset 14, -4
 246:Src/motion.c  ****     Back();
 1002              		.loc 1 246 0
 1003 0002 FFF7FEFF 		bl	Back
 1004              	.LVL53:
 1005              	.L102:
 247:Src/motion.c  ****     while(flag.accel==ON || flag.straight==ON){}
 1006              		.loc 1 247 0 discriminator 3
 1007 0006 074B     		ldr	r3, .L105
 1008 0008 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1009 000a DBB2     		uxtb	r3, r3
 1010 000c 012B     		cmp	r3, #1
 1011 000e FAD0     		beq	.L102
 1012              		.loc 1 247 0 is_stmt 0 discriminator 2
 1013 0010 044B     		ldr	r3, .L105
 1014 0012 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1015 0014 DBB2     		uxtb	r3, r3
 1016 0016 012B     		cmp	r3, #1
 1017 0018 F5D0     		beq	.L102
 248:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 1018              		.loc 1 248 0 is_stmt 1
 1019 001a 4C20     		movs	r0, #76
 1020 001c FFF7FEFF 		bl	Output_Buzzer
 1021              	.LVL54:
 249:Src/motion.c  **** }
 1022              		.loc 1 249 0
 1023 0020 08BD     		pop	{r3, pc}
 1024              	.L106:
 1025 0022 00BF     		.align	2
 1026              	.L105:
 1027 0024 00000000 		.word	flag
 1028              		.cfi_endproc
 1029              	.LFE146:
 1031              		.section	.text.Motion_nStraight,"ax",%progbits
 1032              		.align	1
 1033              		.global	Motion_nStraight
 1034              		.syntax unified
 1035              		.thumb
 1036              		.thumb_func
 1037              		.fpu fpv4-sp-d16
 1039              	Motion_nStraight:
 1040              	.LFB147:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 23


 250:Src/motion.c  **** 
 251:Src/motion.c  **** void Motion_nStraight(unsigned char num){
 1041              		.loc 1 251 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              	.LVL55:
 1046 0000 38B5     		push	{r3, r4, r5, lr}
 1047              	.LCFI17:
 1048              		.cfi_def_cfa_offset 16
 1049              		.cfi_offset 3, -16
 1050              		.cfi_offset 4, -12
 1051              		.cfi_offset 5, -8
 1052              		.cfi_offset 14, -4
 1053 0002 0546     		mov	r5, r0
 1054              	.LVL56:
 1055              	.LBB2:
 252:Src/motion.c  ****     for(uint8_t i=0;i<num;i++){
 1056              		.loc 1 252 0
 1057 0004 0024     		movs	r4, #0
 1058 0006 0DE0     		b	.L108
 1059              	.LVL57:
 1060              	.L111:
 253:Src/motion.c  ****         Straight();
 1061              		.loc 1 253 0
 1062 0008 FFF7FEFF 		bl	Straight
 1063              	.LVL58:
 1064              	.L109:
 254:Src/motion.c  ****         while(flag.accel==ON || flag.straight==ON){}
 1065              		.loc 1 254 0 discriminator 3
 1066 000c 074B     		ldr	r3, .L113
 1067 000e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1068 0010 DBB2     		uxtb	r3, r3
 1069 0012 012B     		cmp	r3, #1
 1070 0014 FAD0     		beq	.L109
 1071              		.loc 1 254 0 is_stmt 0 discriminator 2
 1072 0016 054B     		ldr	r3, .L113
 1073 0018 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1074 001a DBB2     		uxtb	r3, r3
 1075 001c 012B     		cmp	r3, #1
 1076 001e F5D0     		beq	.L109
 252:Src/motion.c  ****     for(uint8_t i=0;i<num;i++){
 1077              		.loc 1 252 0 is_stmt 1 discriminator 2
 1078 0020 0134     		adds	r4, r4, #1
 1079              	.LVL59:
 1080 0022 E4B2     		uxtb	r4, r4
 1081              	.LVL60:
 1082              	.L108:
 252:Src/motion.c  ****     for(uint8_t i=0;i<num;i++){
 1083              		.loc 1 252 0 is_stmt 0 discriminator 1
 1084 0024 AC42     		cmp	r4, r5
 1085 0026 EFD3     		bcc	.L111
 1086              	.LBE2:
 255:Src/motion.c  ****     }
 256:Src/motion.c  **** }
 1087              		.loc 1 256 0 is_stmt 1
 1088 0028 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 24


 1089              	.LVL61:
 1090              	.L114:
 1091 002a 00BF     		.align	2
 1092              	.L113:
 1093 002c 00000000 		.word	flag
 1094              		.cfi_endproc
 1095              	.LFE147:
 1097              		.section	.text.Show_log,"ax",%progbits
 1098              		.align	1
 1099              		.global	Show_log
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1103              		.fpu fpv4-sp-d16
 1105              	Show_log:
 1106              	.LFB148:
 257:Src/motion.c  **** /****************************************************************************************
 258:Src/motion.c  ****  * outline  : show log
 259:Src/motion.c  ****  * argument : void
 260:Src/motion.c  ****  * return   : void
 261:Src/motion.c  **** ********************************************************************************************/
 262:Src/motion.c  **** void Show_log(void){
 1107              		.loc 1 262 0
 1108              		.cfi_startproc
 1109              		@ args = 0, pretend = 0, frame = 0
 1110              		@ frame_needed = 0, uses_anonymous_args = 0
 1111 0000 10B5     		push	{r4, lr}
 1112              	.LCFI18:
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 4, -8
 1115              		.cfi_offset 14, -4
 263:Src/motion.c  ****     printf("\na:%d,c:%d,d:%d\r\n",y_accel_T,y_constant_T,y_decrease_T);
 1116              		.loc 1 263 0
 1117 0002 154B     		ldr	r3, .L122
 1118 0004 1B88     		ldrh	r3, [r3]
 1119 0006 154A     		ldr	r2, .L122+4
 1120 0008 1288     		ldrh	r2, [r2]
 1121 000a 1549     		ldr	r1, .L122+8
 1122 000c 0988     		ldrh	r1, [r1]
 1123 000e 1548     		ldr	r0, .L122+12
 1124 0010 FFF7FEFF 		bl	printf
 1125              	.LVL62:
 1126              	.LBB3:
 264:Src/motion.c  ****     for(uint16_t i=0;i<2000;i++){
 1127              		.loc 1 264 0
 1128 0014 0024     		movs	r4, #0
 1129              	.LVL63:
 1130              	.L116:
 1131              		.loc 1 264 0 is_stmt 0 discriminator 1
 1132 0016 B4F5FA6F 		cmp	r4, #2000
 1133 001a 1BD2     		bcs	.L115
 265:Src/motion.c  ****         printf("%d\t%d\r\n",loger.sen_l[i],loger.sen_r[i]);
 1134              		.loc 1 265 0 is_stmt 1
 1135 001c 1249     		ldr	r1, .L122+16
 1136 001e 04F58C43 		add	r3, r4, #17920
 1137 0022 5033     		adds	r3, r3, #80
 1138 0024 04F59C42 		add	r2, r4, #19968
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 25


 1139 0028 2032     		adds	r2, r2, #32
 1140 002a 31F91220 		ldrsh	r2, [r1, r2, lsl #1]
 1141 002e 31F91310 		ldrsh	r1, [r1, r3, lsl #1]
 1142 0032 0E48     		ldr	r0, .L122+20
 1143 0034 FFF7FEFF 		bl	printf
 1144              	.LVL64:
 266:Src/motion.c  ****         if(Push()==ON){
 1145              		.loc 1 266 0
 1146 0038 FFF7FEFF 		bl	Push
 1147              	.LVL65:
 1148 003c 0128     		cmp	r0, #1
 1149 003e 02D0     		beq	.L121
 264:Src/motion.c  ****     for(uint16_t i=0;i<2000;i++){
 1150              		.loc 1 264 0 discriminator 2
 1151 0040 0134     		adds	r4, r4, #1
 1152              	.LVL66:
 1153 0042 A4B2     		uxth	r4, r4
 1154              	.LVL67:
 1155 0044 E7E7     		b	.L116
 1156              	.L121:
 267:Src/motion.c  ****             Output_Buzzer(HZ_A);
 1157              		.loc 1 267 0
 1158 0046 5B20     		movs	r0, #91
 1159 0048 FFF7FEFF 		bl	Output_Buzzer
 1160              	.LVL68:
 268:Src/motion.c  ****             HAL_Delay(300);
 1161              		.loc 1 268 0
 1162 004c 4FF49670 		mov	r0, #300
 1163 0050 FFF7FEFF 		bl	HAL_Delay
 1164              	.LVL69:
 1165              	.L115:
 1166              	.LBE3:
 269:Src/motion.c  ****             break;
 270:Src/motion.c  ****         }
 271:Src/motion.c  ****     }
 272:Src/motion.c  **** }
 1167              		.loc 1 272 0
 1168 0054 10BD     		pop	{r4, pc}
 1169              	.LVL70:
 1170              	.L123:
 1171 0056 00BF     		.align	2
 1172              	.L122:
 1173 0058 00000000 		.word	y_decrease_T
 1174 005c 00000000 		.word	y_constant_T
 1175 0060 00000000 		.word	y_accel_T
 1176 0064 00000000 		.word	.LC0
 1177 0068 00000000 		.word	loger
 1178 006c 14000000 		.word	.LC1
 1179              		.cfi_endproc
 1180              	.LFE148:
 1182              		.section	.text.Sensor_Mode,"ax",%progbits
 1183              		.align	1
 1184              		.global	Sensor_Mode
 1185              		.syntax unified
 1186              		.thumb
 1187              		.thumb_func
 1188              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 26


 1190              	Sensor_Mode:
 1191              	.LFB149:
 273:Src/motion.c  **** 
 274:Src/motion.c  **** void Sensor_Mode(void){
 1192              		.loc 1 274 0
 1193              		.cfi_startproc
 1194              		@ args = 0, pretend = 0, frame = 0
 1195              		@ frame_needed = 0, uses_anonymous_args = 0
 1196 0000 08B5     		push	{r3, lr}
 1197              	.LCFI19:
 1198              		.cfi_def_cfa_offset 8
 1199              		.cfi_offset 3, -8
 1200              		.cfi_offset 14, -4
 1201              	.L125:
 275:Src/motion.c  ****     while(1){
 276:Src/motion.c  ****         adcStart();
 1202              		.loc 1 276 0
 1203 0002 FFF7FEFF 		bl	adcStart
 1204              	.LVL71:
 277:Src/motion.c  ****         Sensor_Check();
 1205              		.loc 1 277 0
 1206 0006 FFF7FEFF 		bl	Sensor_Check
 1207              	.LVL72:
 278:Src/motion.c  ****         printf("left:%d front:%d right:%d\r",sen_l.now,sen_front.now,sen_r.now);
 1208              		.loc 1 278 0
 1209 000a 0A4B     		ldr	r3, .L127
 1210 000c B3F90030 		ldrsh	r3, [r3]
 1211 0010 094A     		ldr	r2, .L127+4
 1212 0012 B2F90020 		ldrsh	r2, [r2]
 1213 0016 0949     		ldr	r1, .L127+8
 1214 0018 B1F90010 		ldrsh	r1, [r1]
 1215 001c 0848     		ldr	r0, .L127+12
 1216 001e FFF7FEFF 		bl	printf
 1217              	.LVL73:
 279:Src/motion.c  ****         if(Push()==ON){
 1218              		.loc 1 279 0
 1219 0022 FFF7FEFF 		bl	Push
 1220              	.LVL74:
 1221 0026 0128     		cmp	r0, #1
 1222 0028 EBD1     		bne	.L125
 280:Src/motion.c  ****             Output_Buzzer(HZ_A);
 1223              		.loc 1 280 0
 1224 002a 5B20     		movs	r0, #91
 1225 002c FFF7FEFF 		bl	Output_Buzzer
 1226              	.LVL75:
 281:Src/motion.c  ****             break;
 282:Src/motion.c  ****         }
 283:Src/motion.c  ****     }
 284:Src/motion.c  **** }
 1227              		.loc 1 284 0
 1228 0030 08BD     		pop	{r3, pc}
 1229              	.L128:
 1230 0032 00BF     		.align	2
 1231              	.L127:
 1232 0034 00000000 		.word	sen_r
 1233 0038 00000000 		.word	sen_front
 1234 003c 00000000 		.word	sen_l
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 27


 1235 0040 00000000 		.word	.LC2
 1236              		.cfi_endproc
 1237              	.LFE149:
 1239              		.section	.text.Test_Create_Map,"ax",%progbits
 1240              		.align	1
 1241              		.global	Test_Create_Map
 1242              		.syntax unified
 1243              		.thumb
 1244              		.thumb_func
 1245              		.fpu fpv4-sp-d16
 1247              	Test_Create_Map:
 1248              	.LFB150:
 285:Src/motion.c  **** 
 286:Src/motion.c  **** void Test_Create_Map(void){
 1249              		.loc 1 286 0
 1250              		.cfi_startproc
 1251              		@ args = 0, pretend = 0, frame = 0
 1252              		@ frame_needed = 0, uses_anonymous_args = 0
 1253 0000 08B5     		push	{r3, lr}
 1254              	.LCFI20:
 1255              		.cfi_def_cfa_offset 8
 1256              		.cfi_offset 3, -8
 1257              		.cfi_offset 14, -4
 287:Src/motion.c  ****     Maze_Set();
 1258              		.loc 1 287 0
 1259 0002 FFF7FEFF 		bl	Maze_Set
 1260              	.LVL76:
 288:Src/motion.c  ****     Init_maze();
 1261              		.loc 1 288 0
 1262 0006 FFF7FEFF 		bl	Init_maze
 1263              	.LVL77:
 289:Src/motion.c  ****     MAZE_Create_Step();
 1264              		.loc 1 289 0
 1265 000a FFF7FEFF 		bl	MAZE_Create_Step
 1266              	.LVL78:
 290:Src/motion.c  ****     MAZE_Printf_Step();
 1267              		.loc 1 290 0
 1268 000e FFF7FEFF 		bl	MAZE_Printf_Step
 1269              	.LVL79:
 291:Src/motion.c  **** }
 1270              		.loc 1 291 0
 1271 0012 08BD     		pop	{r3, pc}
 1272              		.cfi_endproc
 1273              	.LFE150:
 1275              		.global	__aeabi_f2d
 1276              		.section	.text.Batt_Check,"ax",%progbits
 1277              		.align	1
 1278              		.global	Batt_Check
 1279              		.syntax unified
 1280              		.thumb
 1281              		.thumb_func
 1282              		.fpu fpv4-sp-d16
 1284              	Batt_Check:
 1285              	.LFB151:
 292:Src/motion.c  **** 
 293:Src/motion.c  **** /****************************************************************************************
 294:Src/motion.c  ****  * outline  : normalize battery (12bit -> dec)
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 28


 295:Src/motion.c  ****  * argument : void
 296:Src/motion.c  ****  * return   : void
 297:Src/motion.c  **** ********************************************************************************************/
 298:Src/motion.c  **** void Batt_Check(void)
 299:Src/motion.c  **** {
 1286              		.loc 1 299 0
 1287              		.cfi_startproc
 1288              		@ args = 0, pretend = 0, frame = 0
 1289              		@ frame_needed = 0, uses_anonymous_args = 0
 1290 0000 08B5     		push	{r3, lr}
 1291              	.LCFI21:
 1292              		.cfi_def_cfa_offset 8
 1293              		.cfi_offset 3, -8
 1294              		.cfi_offset 14, -4
 1295              	.LVL80:
 1296              	.LBB4:
 300:Src/motion.c  ****   float batt=0;
 301:Src/motion.c  ****   for(int i=0;i<10;i++){
 1297              		.loc 1 301 0
 1298 0002 0023     		movs	r3, #0
 1299              	.LBE4:
 300:Src/motion.c  ****   float batt=0;
 1300              		.loc 1 300 0
 1301 0004 9FED177A 		vldr.32	s14, .L135
 1302              	.LBB5:
 1303              		.loc 1 301 0
 1304 0008 08E0     		b	.L132
 1305              	.LVL81:
 1306              	.L133:
 302:Src/motion.c  ****     batt += batt_analog;
 1307              		.loc 1 302 0 discriminator 3
 1308 000a 174A     		ldr	r2, .L135+4
 1309 000c 1288     		ldrh	r2, [r2]
 1310 000e 07EE902A 		vmov	s15, r2	@ int
 1311 0012 F8EEE77A 		vcvt.f32.s32	s15, s15
 1312 0016 37EE277A 		vadd.f32	s14, s14, s15
 1313              	.LVL82:
 301:Src/motion.c  ****     batt += batt_analog;
 1314              		.loc 1 301 0 discriminator 3
 1315 001a 0133     		adds	r3, r3, #1
 1316              	.LVL83:
 1317              	.L132:
 301:Src/motion.c  ****     batt += batt_analog;
 1318              		.loc 1 301 0 is_stmt 0 discriminator 1
 1319 001c 092B     		cmp	r3, #9
 1320 001e F4DD     		ble	.L133
 1321              	.LBE5:
 303:Src/motion.c  ****   }
 304:Src/motion.c  ****   batt /= 10.0f;
 1322              		.loc 1 304 0 is_stmt 1
 1323 0020 F2EE047A 		vmov.f32	s15, #1.0e+1
 1324 0024 C7EE276A 		vdiv.f32	s13, s14, s15
 1325              	.LVL84:
 305:Src/motion.c  ****   batt = batt/4095.0f*133.0f/33.0f*3.3f;
 1326              		.loc 1 305 0
 1327 0028 DFED107A 		vldr.32	s15, .L135+8
 1328 002c 86EEA77A 		vdiv.f32	s14, s13, s15
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 29


 1329 0030 DFED0F7A 		vldr.32	s15, .L135+12
 1330 0034 27EE277A 		vmul.f32	s14, s14, s15
 1331 0038 DFED0E6A 		vldr.32	s13, .L135+16
 1332              	.LVL85:
 1333 003c C7EE267A 		vdiv.f32	s15, s14, s13
 1334 0040 9FED0D7A 		vldr.32	s14, .L135+20
 1335 0044 67EE877A 		vmul.f32	s15, s15, s14
 1336              	.LVL86:
 306:Src/motion.c  ****   batt_Vcc = batt;
 1337              		.loc 1 306 0
 1338 0048 0C4B     		ldr	r3, .L135+24
 1339              	.LVL87:
 1340 004a C3ED007A 		vstr.32	s15, [r3]
 307:Src/motion.c  ****   printf("\nbatt:%lf\r\n",batt);
 1341              		.loc 1 307 0
 1342 004e 17EE900A 		vmov	r0, s15
 1343 0052 FFF7FEFF 		bl	__aeabi_f2d
 1344              	.LVL88:
 1345 0056 0246     		mov	r2, r0
 1346 0058 0B46     		mov	r3, r1
 1347 005a 0948     		ldr	r0, .L135+28
 1348 005c FFF7FEFF 		bl	printf
 1349              	.LVL89:
 308:Src/motion.c  **** }
 1350              		.loc 1 308 0
 1351 0060 08BD     		pop	{r3, pc}
 1352              	.L136:
 1353 0062 00BF     		.align	2
 1354              	.L135:
 1355 0064 00000000 		.word	0
 1356 0068 00000000 		.word	batt_analog
 1357 006c 00F07F45 		.word	1166012416
 1358 0070 00000543 		.word	1124401152
 1359 0074 00000442 		.word	1107558400
 1360 0078 33335340 		.word	1079194419
 1361 007c 00000000 		.word	batt_Vcc
 1362 0080 00000000 		.word	.LC3
 1363              		.cfi_endproc
 1364              	.LFE151:
 1366              		.section	.text.PT_Switch,"ax",%progbits
 1367              		.align	1
 1368              		.global	PT_Switch
 1369              		.syntax unified
 1370              		.thumb
 1371              		.thumb_func
 1372              		.fpu fpv4-sp-d16
 1374              	PT_Switch:
 1375              	.LFB152:
 309:Src/motion.c  **** 
 310:Src/motion.c  **** void PT_Switch(void){
 1376              		.loc 1 310 0
 1377              		.cfi_startproc
 1378              		@ args = 0, pretend = 0, frame = 0
 1379              		@ frame_needed = 0, uses_anonymous_args = 0
 1380 0000 08B5     		push	{r3, lr}
 1381              	.LCFI22:
 1382              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 30


 1383              		.cfi_offset 3, -8
 1384              		.cfi_offset 14, -4
 311:Src/motion.c  ****     adcStart();
 1385              		.loc 1 311 0
 1386 0002 FFF7FEFF 		bl	adcStart
 1387              	.LVL90:
 1388              	.L138:
 312:Src/motion.c  ****     while(1){
 313:Src/motion.c  ****         if(sen_front.is_wall==true){
 1389              		.loc 1 313 0
 1390 0006 044B     		ldr	r3, .L140
 1391 0008 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1392 000a 012B     		cmp	r3, #1
 1393 000c FBD1     		bne	.L138
 314:Src/motion.c  ****         Output_Buzzer(HZ_C_H);
 1394              		.loc 1 314 0
 1395 000e 4C20     		movs	r0, #76
 1396 0010 FFF7FEFF 		bl	Output_Buzzer
 1397              	.LVL91:
 315:Src/motion.c  ****         break;
 316:Src/motion.c  ****         }
 317:Src/motion.c  ****     }
 318:Src/motion.c  **** }
 1398              		.loc 1 318 0
 1399 0014 08BD     		pop	{r3, pc}
 1400              	.L141:
 1401 0016 00BF     		.align	2
 1402              	.L140:
 1403 0018 00000000 		.word	sen_front
 1404              		.cfi_endproc
 1405              	.LFE152:
 1407              		.section	.text.Normal_Turn_Half,"ax",%progbits
 1408              		.align	1
 1409              		.global	Normal_Turn_Half
 1410              		.syntax unified
 1411              		.thumb
 1412              		.thumb_func
 1413              		.fpu fpv4-sp-d16
 1415              	Normal_Turn_Half:
 1416              	.LFB126:
  12:Src/motion.c  ****     PT_Switch();
 1417              		.loc 1 12 0
 1418              		.cfi_startproc
 1419              		@ args = 0, pretend = 0, frame = 0
 1420              		@ frame_needed = 0, uses_anonymous_args = 0
 1421 0000 08B5     		push	{r3, lr}
 1422              	.LCFI23:
 1423              		.cfi_def_cfa_offset 8
 1424              		.cfi_offset 3, -8
 1425              		.cfi_offset 14, -4
  13:Src/motion.c  ****     gyro_offset_calc_reset();
 1426              		.loc 1 13 0
 1427 0002 FFF7FEFF 		bl	PT_Switch
 1428              	.LVL92:
  14:Src/motion.c  ****     Yawrate_Calc_fb(180,0,0);
 1429              		.loc 1 14 0
 1430 0006 FFF7FEFF 		bl	gyro_offset_calc_reset
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 31


 1431              	.LVL93:
  15:Src/motion.c  ****     HAL_Delay(1500);
 1432              		.loc 1 15 0
 1433 000a 0022     		movs	r2, #0
 1434 000c 1146     		mov	r1, r2
 1435 000e B420     		movs	r0, #180
 1436 0010 FFF7FEFF 		bl	Yawrate_Calc_fb
 1437              	.LVL94:
  16:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 1438              		.loc 1 16 0
 1439 0014 40F2DC50 		movw	r0, #1500
 1440 0018 FFF7FEFF 		bl	HAL_Delay
 1441              	.LVL95:
  17:Src/motion.c  ****     flag.yawrate = ON;
 1442              		.loc 1 17 0
 1443 001c 4C20     		movs	r0, #76
 1444 001e FFF7FEFF 		bl	Output_Buzzer
 1445              	.LVL96:
  18:Src/motion.c  ****     while(1){
 1446              		.loc 1 18 0
 1447 0022 074B     		ldr	r3, .L145
 1448 0024 0122     		movs	r2, #1
 1449 0026 9A70     		strb	r2, [r3, #2]
 1450              	.L143:
  20:Src/motion.c  ****             flag.yawrate = OFF;
 1451              		.loc 1 20 0
 1452 0028 FFF7FEFF 		bl	Push
 1453              	.LVL97:
 1454 002c 0128     		cmp	r0, #1
 1455 002e FBD1     		bne	.L143
  21:Src/motion.c  ****             Output_Buzzer(HZ_A);
 1456              		.loc 1 21 0
 1457 0030 034B     		ldr	r3, .L145
 1458 0032 0022     		movs	r2, #0
 1459 0034 9A70     		strb	r2, [r3, #2]
  22:Src/motion.c  ****             break;
 1460              		.loc 1 22 0
 1461 0036 5B20     		movs	r0, #91
 1462 0038 FFF7FEFF 		bl	Output_Buzzer
 1463              	.LVL98:
  26:Src/motion.c  **** 
 1464              		.loc 1 26 0
 1465 003c 08BD     		pop	{r3, pc}
 1466              	.L146:
 1467 003e 00BF     		.align	2
 1468              	.L145:
 1469 0040 00000000 		.word	flag
 1470              		.cfi_endproc
 1471              	.LFE126:
 1473              		.section	.text.Normal_Ennkai,"ax",%progbits
 1474              		.align	1
 1475              		.global	Normal_Ennkai
 1476              		.syntax unified
 1477              		.thumb
 1478              		.thumb_func
 1479              		.fpu fpv4-sp-d16
 1481              	Normal_Ennkai:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 32


 1482              	.LFB127:
  33:Src/motion.c  ****     PT_Switch();
 1483              		.loc 1 33 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 0
 1486              		@ frame_needed = 0, uses_anonymous_args = 0
 1487 0000 08B5     		push	{r3, lr}
 1488              	.LCFI24:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 3, -8
 1491              		.cfi_offset 14, -4
  34:Src/motion.c  ****     HAL_Delay(500);
 1492              		.loc 1 34 0
 1493 0002 FFF7FEFF 		bl	PT_Switch
 1494              	.LVL99:
  35:Src/motion.c  ****     gyro_offset_calc_reset();
 1495              		.loc 1 35 0
 1496 0006 4FF4FA70 		mov	r0, #500
 1497 000a FFF7FEFF 		bl	HAL_Delay
 1498              	.LVL100:
  36:Src/motion.c  ****     Yawrate_Calc_Zero();
 1499              		.loc 1 36 0
 1500 000e FFF7FEFF 		bl	gyro_offset_calc_reset
 1501              	.LVL101:
  37:Src/motion.c  ****     HAL_Delay(1500);
 1502              		.loc 1 37 0
 1503 0012 FFF7FEFF 		bl	Yawrate_Calc_Zero
 1504              	.LVL102:
  38:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 1505              		.loc 1 38 0
 1506 0016 40F2DC50 		movw	r0, #1500
 1507 001a FFF7FEFF 		bl	HAL_Delay
 1508              	.LVL103:
  39:Src/motion.c  ****     flag.yawrate = ON;
 1509              		.loc 1 39 0
 1510 001e 4C20     		movs	r0, #76
 1511 0020 FFF7FEFF 		bl	Output_Buzzer
 1512              	.LVL104:
  40:Src/motion.c  ****     while(1){
 1513              		.loc 1 40 0
 1514 0024 064B     		ldr	r3, .L150
 1515 0026 0122     		movs	r2, #1
 1516 0028 9A70     		strb	r2, [r3, #2]
 1517              	.L148:
  42:Src/motion.c  ****             flag.yawrate = OFF;
 1518              		.loc 1 42 0
 1519 002a FFF7FEFF 		bl	Push
 1520              	.LVL105:
 1521 002e 0128     		cmp	r0, #1
 1522 0030 FBD1     		bne	.L148
  43:Src/motion.c  ****             Output_Buzzer(HZ_A);
 1523              		.loc 1 43 0
 1524 0032 034B     		ldr	r3, .L150
 1525 0034 0022     		movs	r2, #0
 1526 0036 9A70     		strb	r2, [r3, #2]
  44:Src/motion.c  ****             break;
 1527              		.loc 1 44 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 33


 1528 0038 5B20     		movs	r0, #91
 1529 003a FFF7FEFF 		bl	Output_Buzzer
 1530              	.LVL106:
  48:Src/motion.c  **** 
 1531              		.loc 1 48 0
 1532 003e 08BD     		pop	{r3, pc}
 1533              	.L151:
 1534              		.align	2
 1535              	.L150:
 1536 0040 00000000 		.word	flag
 1537              		.cfi_endproc
 1538              	.LFE127:
 1540              		.section	.text.Ennkai,"ax",%progbits
 1541              		.align	1
 1542              		.global	Ennkai
 1543              		.syntax unified
 1544              		.thumb
 1545              		.thumb_func
 1546              		.fpu fpv4-sp-d16
 1548              	Ennkai:
 1549              	.LFB128:
  50:Src/motion.c  ****     PT_Switch();
 1550              		.loc 1 50 0
 1551              		.cfi_startproc
 1552              		@ args = 0, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554 0000 08B5     		push	{r3, lr}
 1555              	.LCFI25:
 1556              		.cfi_def_cfa_offset 8
 1557              		.cfi_offset 3, -8
 1558              		.cfi_offset 14, -4
  51:Src/motion.c  ****     HAL_Delay(500);
 1559              		.loc 1 51 0
 1560 0002 FFF7FEFF 		bl	PT_Switch
 1561              	.LVL107:
  52:Src/motion.c  ****     gyro_offset_calc_reset();
 1562              		.loc 1 52 0
 1563 0006 4FF4FA70 		mov	r0, #500
 1564 000a FFF7FEFF 		bl	HAL_Delay
 1565              	.LVL108:
  53:Src/motion.c  ****     Yawrate_Calc_Zero();
 1566              		.loc 1 53 0
 1567 000e FFF7FEFF 		bl	gyro_offset_calc_reset
 1568              	.LVL109:
  54:Src/motion.c  ****     Straight_Calc_Zero();
 1569              		.loc 1 54 0
 1570 0012 FFF7FEFF 		bl	Yawrate_Calc_Zero
 1571              	.LVL110:
  55:Src/motion.c  ****     HAL_Delay(1500);
 1572              		.loc 1 55 0
 1573 0016 FFF7FEFF 		bl	Straight_Calc_Zero
 1574              	.LVL111:
  56:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 1575              		.loc 1 56 0
 1576 001a 40F2DC50 		movw	r0, #1500
 1577 001e FFF7FEFF 		bl	HAL_Delay
 1578              	.LVL112:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 34


  57:Src/motion.c  ****     flag.yawrate = ON;
 1579              		.loc 1 57 0
 1580 0022 4C20     		movs	r0, #76
 1581 0024 FFF7FEFF 		bl	Output_Buzzer
 1582              	.LVL113:
  58:Src/motion.c  ****     flag.straight = ON;
 1583              		.loc 1 58 0
 1584 0028 074B     		ldr	r3, .L155
 1585 002a 0122     		movs	r2, #1
 1586 002c 9A70     		strb	r2, [r3, #2]
  59:Src/motion.c  ****     while(1){
 1587              		.loc 1 59 0
 1588 002e 5A70     		strb	r2, [r3, #1]
 1589              	.L153:
  61:Src/motion.c  ****             flag.yawrate = OFF;
 1590              		.loc 1 61 0
 1591 0030 FFF7FEFF 		bl	Push
 1592              	.LVL114:
 1593 0034 0128     		cmp	r0, #1
 1594 0036 FBD1     		bne	.L153
  62:Src/motion.c  ****             flag.straight = OFF;
 1595              		.loc 1 62 0
 1596 0038 034B     		ldr	r3, .L155
 1597 003a 0022     		movs	r2, #0
 1598 003c 9A70     		strb	r2, [r3, #2]
  63:Src/motion.c  ****             Output_Buzzer(HZ_A);
 1599              		.loc 1 63 0
 1600 003e 5A70     		strb	r2, [r3, #1]
  64:Src/motion.c  ****             break;
 1601              		.loc 1 64 0
 1602 0040 5B20     		movs	r0, #91
 1603 0042 FFF7FEFF 		bl	Output_Buzzer
 1604              	.LVL115:
  68:Src/motion.c  **** 
 1605              		.loc 1 68 0
 1606 0046 08BD     		pop	{r3, pc}
 1607              	.L156:
 1608              		.align	2
 1609              	.L155:
 1610 0048 00000000 		.word	flag
 1611              		.cfi_endproc
 1612              	.LFE128:
 1614              		.section	.text.Normal_Straight,"ax",%progbits
 1615              		.align	1
 1616              		.global	Normal_Straight
 1617              		.syntax unified
 1618              		.thumb
 1619              		.thumb_func
 1620              		.fpu fpv4-sp-d16
 1622              	Normal_Straight:
 1623              	.LFB129:
  76:Src/motion.c  ****     PT_Switch();
 1624              		.loc 1 76 0
 1625              		.cfi_startproc
 1626              		@ args = 0, pretend = 0, frame = 0
 1627              		@ frame_needed = 0, uses_anonymous_args = 0
 1628 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 35


 1629              	.LCFI26:
 1630              		.cfi_def_cfa_offset 8
 1631              		.cfi_offset 3, -8
 1632              		.cfi_offset 14, -4
  77:Src/motion.c  ****     HAL_Delay(500);
 1633              		.loc 1 77 0
 1634 0002 FFF7FEFF 		bl	PT_Switch
 1635              	.LVL116:
  78:Src/motion.c  ****     Straight_Calc_fb(180,0,0);
 1636              		.loc 1 78 0
 1637 0006 4FF4FA70 		mov	r0, #500
 1638 000a FFF7FEFF 		bl	HAL_Delay
 1639              	.LVL117:
  79:Src/motion.c  ****     HAL_Delay(1000);
 1640              		.loc 1 79 0
 1641 000e 0022     		movs	r2, #0
 1642 0010 1146     		mov	r1, r2
 1643 0012 B420     		movs	r0, #180
 1644 0014 FFF7FEFF 		bl	Straight_Calc_fb
 1645              	.LVL118:
  80:Src/motion.c  ****     Output_Buzzer(HZ_C_H);
 1646              		.loc 1 80 0
 1647 0018 4FF47A70 		mov	r0, #1000
 1648 001c FFF7FEFF 		bl	HAL_Delay
 1649              	.LVL119:
  81:Src/motion.c  ****     flag.straight = ON;
 1650              		.loc 1 81 0
 1651 0020 4C20     		movs	r0, #76
 1652 0022 FFF7FEFF 		bl	Output_Buzzer
 1653              	.LVL120:
  82:Src/motion.c  ****     while(1){
 1654              		.loc 1 82 0
 1655 0026 074B     		ldr	r3, .L160
 1656 0028 0122     		movs	r2, #1
 1657 002a 5A70     		strb	r2, [r3, #1]
 1658              	.L158:
  84:Src/motion.c  ****             flag.straight = OFF;
 1659              		.loc 1 84 0
 1660 002c FFF7FEFF 		bl	Push
 1661              	.LVL121:
 1662 0030 0128     		cmp	r0, #1
 1663 0032 FBD1     		bne	.L158
  85:Src/motion.c  ****             Output_Buzzer(HZ_A);
 1664              		.loc 1 85 0
 1665 0034 034B     		ldr	r3, .L160
 1666 0036 0022     		movs	r2, #0
 1667 0038 5A70     		strb	r2, [r3, #1]
  86:Src/motion.c  ****             break;
 1668              		.loc 1 86 0
 1669 003a 5B20     		movs	r0, #91
 1670 003c FFF7FEFF 		bl	Output_Buzzer
 1671              	.LVL122:
  90:Src/motion.c  **** 
 1672              		.loc 1 90 0
 1673 0040 08BD     		pop	{r3, pc}
 1674              	.L161:
 1675 0042 00BF     		.align	2
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 36


 1676              	.L160:
 1677 0044 00000000 		.word	flag
 1678              		.cfi_endproc
 1679              	.LFE129:
 1681              		.section	.text.Kabeate_dec,"ax",%progbits
 1682              		.align	1
 1683              		.global	Kabeate_dec
 1684              		.syntax unified
 1685              		.thumb
 1686              		.thumb_func
 1687              		.fpu fpv4-sp-d16
 1689              	Kabeate_dec:
 1690              	.LFB153:
 319:Src/motion.c  **** 
 320:Src/motion.c  **** void Kabeate_dec(unsigned char flag){
 1691              		.loc 1 320 0
 1692              		.cfi_startproc
 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              		@ link register save eliminated.
 1696              	.LVL123:
 321:Src/motion.c  ****     flag_kabeate = flag;
 322:Src/motion.c  **** }...
 1697              		.loc 1 322 0
 1698 0000 7047     		bx	lr
 1699              		.cfi_endproc
 1700              	.LFE153:
 1702              		.comm	straight_dir,1,1
 1703              		.comm	wall_pid,2,2
 1704              		.comm	yawrate_pid,2,2
 1705              		.comm	straight_pid_r,2,2
 1706              		.comm	straight_pid_l,2,2
 1707              		.comm	w_befor,4,4
 1708              		.comm	w_sum,4,4
 1709              		.comm	y_sumsum,4,4
 1710              		.comm	y_sum,4,4
 1711              		.comm	s_sum_r,4,4
 1712              		.comm	s_sum_l,4,4
 1713              		.section	.rodata.Batt_Check.str1.4,"aMS",%progbits,1
 1714              		.align	2
 1715              	.LC3:
 1716 0000 0A626174 		.ascii	"\012batt:%lf\015\012\000"
 1716      743A256C 
 1716      660D0A00 
 1717              		.section	.rodata.Sensor_Mode.str1.4,"aMS",%progbits,1
 1718              		.align	2
 1719              	.LC2:
 1720 0000 6C656674 		.ascii	"left:%d front:%d right:%d\015\000"
 1720      3A256420 
 1720      66726F6E 
 1720      743A2564 
 1720      20726967 
 1721              		.section	.rodata.Show_log.str1.4,"aMS",%progbits,1
 1722              		.align	2
 1723              	.LC0:
 1724 0000 0A613A25 		.ascii	"\012a:%d,c:%d,d:%d\015\012\000"
 1724      642C633A 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 37


 1724      25642C64 
 1724      3A25640D 
 1724      0A00
 1725 0012 0000     		.space	2
 1726              	.LC1:
 1727 0014 25640925 		.ascii	"%d\011%d\015\012\000"
 1727      640D0A00 
 1728              		.text
 1729              	.Letext0:
 1730              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1731              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1732              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1733              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 1734              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 1735              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1736              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 1737              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 1738              		.file 10 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1739              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1740              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1741              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1742              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1743              		.file 15 "Inc/tim.h"
 1744              		.file 16 "Inc/global.h"
 1745              		.file 17 "Inc/control.h"
 1746              		.file 18 "Inc/spi.h"
 1747              		.file 19 "Inc/maze.h"
 1748              		.file 20 "Inc/function.h"
 1749              		.file 21 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include
 1750              		.file 22 "Inc/gpio.h"
 1751              		.file 23 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 38


DEFINED SYMBOLS
                            *ABS*:00000000 motion.c
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:18     .text.Straight_Start:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:25     .text.Straight_Start:00000000 Straight_Start
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:60     .text.Straight_Start:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:65     .text.Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:72     .text.Straight:00000000 Straight
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:105    .text.Straight:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:110    .text.Straight_HalF:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:117    .text.Straight_HalF:00000000 Straight_HalF
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:150    .text.Straight_HalF:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:155    .text.Turn_Half:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:162    .text.Turn_Half:00000000 Turn_Half
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:200    .text.Turn_Half:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:205    .text.Turn_Quarter_Left:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:212    .text.Turn_Quarter_Left:00000000 Turn_Quarter_Left
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:250    .text.Turn_Quarter_Left:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:255    .text.Turn_Quarter_Right:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:262    .text.Turn_Quarter_Right:00000000 Turn_Quarter_Right
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:299    .text.Turn_Quarter_Right:00000024 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:304    .text.Back:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:311    .text.Back:00000000 Back
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:345    .text.Back:00000020 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:350    .text.Straight_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:357    .text.Straight_Check:00000000 Straight_Check
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:399    .text.Straight_Check:0000002c $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:404    .text.Motion_Start:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:411    .text.Motion_Start:00000000 Motion_Start
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:467    .text.Motion_Start:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:472    .text.Motion_Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:479    .text.Motion_Straight:00000000 Motion_Straight
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:515    .text.Motion_Straight:00000024 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:520    .text.Motion_Left:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:527    .text.Motion_Left:00000000 Motion_Left
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:603    .text.Motion_Left:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:608    .text.Motion_Right:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:615    .text.Motion_Right:00000000 Motion_Right
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:691    .text.Motion_Right:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:696    .text.Motion_Uturn:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:703    .text.Motion_Uturn:00000000 Motion_Uturn
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:779    .text.Motion_Uturn:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:784    .text.Motion_Kabeate:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:791    .text.Motion_Kabeate:00000000 Motion_Kabeate
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:887    .text.Motion_Kabeate:00000084 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:892    .text.Motion_Goal:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:899    .text.Motion_Goal:00000000 Motion_Goal
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:935    .text.Motion_Goal:00000024 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:940    .text.Motion_Straight_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:947    .text.Motion_Straight_Check:00000000 Motion_Straight_Check
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:979    .text.Motion_Straight_Check:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:984    .text.Motion_Back:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:991    .text.Motion_Back:00000000 Motion_Back
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1027   .text.Motion_Back:00000024 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1032   .text.Motion_nStraight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1039   .text.Motion_nStraight:00000000 Motion_nStraight
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1093   .text.Motion_nStraight:0000002c $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1098   .text.Show_log:00000000 $t
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 39


C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1105   .text.Show_log:00000000 Show_log
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1173   .text.Show_log:00000058 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1183   .text.Sensor_Mode:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1190   .text.Sensor_Mode:00000000 Sensor_Mode
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1232   .text.Sensor_Mode:00000034 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1240   .text.Test_Create_Map:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1247   .text.Test_Create_Map:00000000 Test_Create_Map
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1277   .text.Batt_Check:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1284   .text.Batt_Check:00000000 Batt_Check
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1355   .text.Batt_Check:00000064 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1367   .text.PT_Switch:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1374   .text.PT_Switch:00000000 PT_Switch
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1403   .text.PT_Switch:00000018 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1408   .text.Normal_Turn_Half:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1415   .text.Normal_Turn_Half:00000000 Normal_Turn_Half
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1469   .text.Normal_Turn_Half:00000040 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1474   .text.Normal_Ennkai:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1481   .text.Normal_Ennkai:00000000 Normal_Ennkai
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1536   .text.Normal_Ennkai:00000040 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1541   .text.Ennkai:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1548   .text.Ennkai:00000000 Ennkai
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1610   .text.Ennkai:00000048 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1615   .text.Normal_Straight:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1622   .text.Normal_Straight:00000000 Normal_Straight
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1677   .text.Normal_Straight:00000044 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1682   .text.Kabeate_dec:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1689   .text.Kabeate_dec:00000000 Kabeate_dec
                            *COM*:00000001 straight_dir
                            *COM*:00000002 wall_pid
                            *COM*:00000002 yawrate_pid
                            *COM*:00000002 straight_pid_r
                            *COM*:00000002 straight_pid_l
                            *COM*:00000004 w_befor
                            *COM*:00000004 w_sum
                            *COM*:00000004 y_sumsum
                            *COM*:00000004 y_sum
                            *COM*:00000004 s_sum_r
                            *COM*:00000004 s_sum_l
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1714   .rodata.Batt_Check.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1718   .rodata.Sensor_Mode.str1.4:00000000 $d
C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s:1722   .rodata.Show_log.str1.4:00000000 $d

UNDEFINED SYMBOLS
Straight_Calc_fb
Yawrate_Calc_Zero
flag
Yawrate_Calc_fb
Straight_Calc_Zero
HAL_Delay
Output_Buzzer
printf
Push
y_decrease_T
y_constant_T
y_accel_T
loger
adcStart
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\cc2g4Uku.s 			page 40


Sensor_Check
sen_r
sen_front
sen_l
Maze_Set
Init_maze
MAZE_Create_Step
MAZE_Printf_Step
__aeabi_f2d
batt_analog
batt_Vcc
gyro_offset_calc_reset
