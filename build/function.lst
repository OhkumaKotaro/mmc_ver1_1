ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"function.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.setIrledPwm,"ax",%progbits
  18              		.align	1
  19              		.global	setIrledPwm
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	setIrledPwm:
  26              	.LFB126:
  27              		.file 1 "Src/function.c"
   1:Src/function.c **** #include "function.h"
   2:Src/function.c **** // peripheeral
   3:Src/function.c **** #include "stm32f4xx_hal.h"
   4:Src/function.c **** #include "adc.h"
   5:Src/function.c **** #include "tim.h"
   6:Src/function.c **** #include "spi.h"
   7:Src/function.c **** #include "main.h"
   8:Src/function.c **** #include "gpio.h"
   9:Src/function.c **** 
  10:Src/function.c **** //common
  11:Src/function.c **** 
  12:Src/function.c **** #define OFF_VALUE 0
  13:Src/function.c **** #define LEFT_VALUE 1
  14:Src/function.c **** #define RIGHT_VALUE 2
  15:Src/function.c **** #define FINISH_CONVERT 3
  16:Src/function.c **** 
  17:Src/function.c **** #define true 1
  18:Src/function.c **** #define false 0
  19:Src/function.c **** 
  20:Src/function.c **** static uint8_t ctr_irled = 0;
  21:Src/function.c **** 
  22:Src/function.c **** ///////////////////////////////////////////////////////////////////////
  23:Src/function.c **** // able ir led
  24:Src/function.c **** // [argument] ired 1:paluse emit ON 0:OFF
  25:Src/function.c **** // [Substitutiong] nothing
  26:Src/function.c **** // [return] nothing
  27:Src/function.c **** ///////////////////////////////////////////////////////////////////////
  28:Src/function.c **** void setIrledPwm( uint8_t able )
  29:Src/function.c **** {
  28              		.loc 1 29 0
  29              		.cfi_startproc
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 2


  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  30:Src/function.c **** 	ctr_irled = able;
  34              		.loc 1 30 0
  35 0000 014B     		ldr	r3, .L2
  36 0002 1870     		strb	r0, [r3]
  31:Src/function.c **** }
  37              		.loc 1 31 0
  38 0004 7047     		bx	lr
  39              	.L3:
  40 0006 00BF     		.align	2
  41              	.L2:
  42 0008 00000000 		.word	.LANCHOR0
  43              		.cfi_endproc
  44              	.LFE126:
  46              		.section	.text.setSensorConstant,"ax",%progbits
  47              		.align	1
  48              		.global	setSensorConstant
  49              		.syntax unified
  50              		.thumb
  51              		.thumb_func
  52              		.fpu fpv4-sp-d16
  54              	setSensorConstant:
  55              	.LFB127:
  32:Src/function.c **** 
  33:Src/function.c **** 
  34:Src/function.c **** void setSensorConstant( sensor_t *sen, int16_t reference, int16_t threshold )
  35:Src/function.c **** {
  56              		.loc 1 35 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              		@ link register save eliminated.
  61              	.LVL1:
  36:Src/function.c ****   sen->reference = reference;
  62              		.loc 1 36 0
  63 0000 8180     		strh	r1, [r0, #4]	@ movhi
  37:Src/function.c ****   sen->threshold = threshold;
  64              		.loc 1 37 0
  65 0002 C280     		strh	r2, [r0, #6]	@ movhi
  38:Src/function.c **** }
  66              		.loc 1 38 0
  67 0004 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE127:
  71              		.section	.text.update_sensor_data,"ax",%progbits
  72              		.align	1
  73              		.global	update_sensor_data
  74              		.syntax unified
  75              		.thumb
  76              		.thumb_func
  77              		.fpu fpv4-sp-d16
  79              	update_sensor_data:
  80              	.LFB128:
  39:Src/function.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 3


  40:Src/function.c **** void update_sensor_data( void )
  41:Src/function.c **** {
  81              		.loc 1 41 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  42:Src/function.c **** 
  43:Src/function.c ****   sen_front.now = ( sen_fl.now + sen_fr.now ) / 2;
  86              		.loc 1 43 0
  87 0000 1A4B     		ldr	r3, .L13
  88 0002 B3F90030 		ldrsh	r3, [r3]
  89 0006 1A4A     		ldr	r2, .L13+4
  90 0008 B2F90020 		ldrsh	r2, [r2]
  91 000c 1344     		add	r3, r3, r2
  92 000e 03EBD373 		add	r3, r3, r3, lsr #31
  93 0012 43F34F03 		sbfx	r3, r3, #1, #16
  94 0016 174A     		ldr	r2, .L13+8
  95 0018 1380     		strh	r3, [r2]	@ movhi
  44:Src/function.c **** 
  45:Src/function.c ****   if ( sen_front.now < sen_front.threshold ){
  96              		.loc 1 45 0
  97 001a B2F90620 		ldrsh	r2, [r2, #6]
  98 001e 9342     		cmp	r3, r2
  99 0020 17DA     		bge	.L6
  46:Src/function.c ****     sen_front.is_wall = false;
 100              		.loc 1 46 0
 101 0022 144B     		ldr	r3, .L13+8
 102 0024 0022     		movs	r2, #0
 103 0026 1A73     		strb	r2, [r3, #12]
 104              	.L7:
  47:Src/function.c ****   } else {
  48:Src/function.c ****     sen_front.is_wall = true;
  49:Src/function.c ****   }
  50:Src/function.c **** 
  51:Src/function.c ****   if ( sen_l.now < sen_l.threshold ){
 105              		.loc 1 51 0
 106 0028 134B     		ldr	r3, .L13+12
 107 002a B3F90020 		ldrsh	r2, [r3]
 108 002e B3F90630 		ldrsh	r3, [r3, #6]
 109 0032 9A42     		cmp	r2, r3
 110 0034 11DA     		bge	.L8
  52:Src/function.c ****     sen_l.is_wall = false;
 111              		.loc 1 52 0
 112 0036 104B     		ldr	r3, .L13+12
 113 0038 0022     		movs	r2, #0
 114 003a 1A73     		strb	r2, [r3, #12]
 115              	.L9:
  53:Src/function.c ****   } else {
  54:Src/function.c ****     sen_l.is_wall = true;
  55:Src/function.c ****   }
  56:Src/function.c **** 
  57:Src/function.c ****   if ( sen_r.now < sen_r.threshold ){
 116              		.loc 1 57 0
 117 003c 0F4B     		ldr	r3, .L13+16
 118 003e B3F90020 		ldrsh	r2, [r3]
 119 0042 B3F90630 		ldrsh	r3, [r3, #6]
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 4


 120 0046 9A42     		cmp	r2, r3
 121 0048 0BDB     		blt	.L12
  58:Src/function.c ****     sen_r.is_wall = false;
  59:Src/function.c ****   } else {
  60:Src/function.c ****     sen_r.is_wall = true;
 122              		.loc 1 60 0
 123 004a 0C4B     		ldr	r3, .L13+16
 124 004c 0122     		movs	r2, #1
 125 004e 1A73     		strb	r2, [r3, #12]
  61:Src/function.c ****   }
  62:Src/function.c **** }
 126              		.loc 1 62 0
 127 0050 7047     		bx	lr
 128              	.L6:
  48:Src/function.c ****   }
 129              		.loc 1 48 0
 130 0052 084B     		ldr	r3, .L13+8
 131 0054 0122     		movs	r2, #1
 132 0056 1A73     		strb	r2, [r3, #12]
 133 0058 E6E7     		b	.L7
 134              	.L8:
  54:Src/function.c ****   }
 135              		.loc 1 54 0
 136 005a 074B     		ldr	r3, .L13+12
 137 005c 0122     		movs	r2, #1
 138 005e 1A73     		strb	r2, [r3, #12]
 139 0060 ECE7     		b	.L9
 140              	.L12:
  58:Src/function.c ****   } else {
 141              		.loc 1 58 0
 142 0062 064B     		ldr	r3, .L13+16
 143 0064 0022     		movs	r2, #0
 144 0066 1A73     		strb	r2, [r3, #12]
 145 0068 7047     		bx	lr
 146              	.L14:
 147 006a 00BF     		.align	2
 148              	.L13:
 149 006c 00000000 		.word	sen_fl
 150 0070 00000000 		.word	sen_fr
 151 0074 00000000 		.word	sen_front
 152 0078 00000000 		.word	sen_l
 153 007c 00000000 		.word	sen_r
 154              		.cfi_endproc
 155              	.LFE128:
 157              		.section	.text.adcStart,"ax",%progbits
 158              		.align	1
 159              		.global	adcStart
 160              		.syntax unified
 161              		.thumb
 162              		.thumb_func
 163              		.fpu fpv4-sp-d16
 165              	adcStart:
 166              	.LFB129:
  63:Src/function.c **** 
  64:Src/function.c **** void adcStart( void )
  65:Src/function.c **** {
 167              		.loc 1 65 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 5


 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 08B5     		push	{r3, lr}
 172              	.LCFI0:
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 3, -8
 175              		.cfi_offset 14, -4
  66:Src/function.c ****   setIrledPwm( IRLED_ON );
 176              		.loc 1 66 0
 177 0002 0120     		movs	r0, #1
 178 0004 FFF7FEFF 		bl	setIrledPwm
 179              	.LVL2:
  67:Src/function.c ****   adc_counter = 0;
 180              		.loc 1 67 0
 181 0008 044B     		ldr	r3, .L17
 182 000a 0022     		movs	r2, #0
 183 000c 1A80     		strh	r2, [r3]	@ movhi
  68:Src/function.c ****   HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 184              		.loc 1 68 0
 185 000e 0822     		movs	r2, #8
 186 0010 0349     		ldr	r1, .L17+4
 187 0012 0448     		ldr	r0, .L17+8
 188 0014 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 189              	.LVL3:
  69:Src/function.c **** }
 190              		.loc 1 69 0
 191 0018 08BD     		pop	{r3, pc}
 192              	.L18:
 193 001a 00BF     		.align	2
 194              	.L17:
 195 001c 00000000 		.word	adc_counter
 196 0020 00000000 		.word	ADCBuff
 197 0024 00000000 		.word	hadc1
 198              		.cfi_endproc
 199              	.LFE129:
 201              		.section	.text.adcCheckConvert,"ax",%progbits
 202              		.align	1
 203              		.global	adcCheckConvert
 204              		.syntax unified
 205              		.thumb
 206              		.thumb_func
 207              		.fpu fpv4-sp-d16
 209              	adcCheckConvert:
 210              	.LFB130:
  70:Src/function.c **** /*
  71:Src/function.c **** void adcEnd( void )
  72:Src/function.c **** {
  73:Src/function.c ****   setIrledPwm( IRLED_OFF );
  74:Src/function.c **** }
  75:Src/function.c **** */
  76:Src/function.c **** void adcCheckConvert( void )
  77:Src/function.c **** {
 211              		.loc 1 77 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 6


 215 0000 08B5     		push	{r3, lr}
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 8
 218              		.cfi_offset 3, -8
 219              		.cfi_offset 14, -4
  78:Src/function.c ****   if ( adc_counter == FINISH_CONVERT && ctr_irled == 1 ){
 220              		.loc 1 78 0
 221 0002 0A4B     		ldr	r3, .L23
 222 0004 B3F90030 		ldrsh	r3, [r3]
 223 0008 032B     		cmp	r3, #3
 224 000a 00D0     		beq	.L22
 225              	.L19:
  79:Src/function.c ****     update_sensor_data();
  80:Src/function.c ****     adc_counter = 0;
  81:Src/function.c ****     HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
  82:Src/function.c ****   }
  83:Src/function.c **** }
 226              		.loc 1 83 0
 227 000c 08BD     		pop	{r3, pc}
 228              	.L22:
  78:Src/function.c ****   if ( adc_counter == FINISH_CONVERT && ctr_irled == 1 ){
 229              		.loc 1 78 0 discriminator 1
 230 000e 084B     		ldr	r3, .L23+4
 231 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 232 0012 012B     		cmp	r3, #1
 233 0014 FAD1     		bne	.L19
  79:Src/function.c ****     update_sensor_data();
 234              		.loc 1 79 0
 235 0016 FFF7FEFF 		bl	update_sensor_data
 236              	.LVL4:
  80:Src/function.c ****     HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 237              		.loc 1 80 0
 238 001a 044B     		ldr	r3, .L23
 239 001c 0022     		movs	r2, #0
 240 001e 1A80     		strh	r2, [r3]	@ movhi
  81:Src/function.c ****   }
 241              		.loc 1 81 0
 242 0020 0822     		movs	r2, #8
 243 0022 0449     		ldr	r1, .L23+8
 244 0024 0448     		ldr	r0, .L23+12
 245 0026 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 246              	.LVL5:
 247              		.loc 1 83 0
 248 002a EFE7     		b	.L19
 249              	.L24:
 250              		.align	2
 251              	.L23:
 252 002c 00000000 		.word	adc_counter
 253 0030 00000000 		.word	.LANCHOR0
 254 0034 00000000 		.word	ADCBuff
 255 0038 00000000 		.word	hadc1
 256              		.cfi_endproc
 257              	.LFE130:
 259              		.section	.text.getADSensor,"ax",%progbits
 260              		.align	1
 261              		.global	getADSensor
 262              		.syntax unified
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 7


 263              		.thumb
 264              		.thumb_func
 265              		.fpu fpv4-sp-d16
 267              	getADSensor:
 268              	.LFB131:
  84:Src/function.c **** 
  85:Src/function.c **** // DMA の変換式を記載
  86:Src/function.c **** void getADSensor( int16_t *adcount )
  87:Src/function.c **** {
 269              		.loc 1 87 0
 270              		.cfi_startproc
 271              		@ args = 0, pretend = 0, frame = 0
 272              		@ frame_needed = 0, uses_anonymous_args = 0
 273              	.LVL6:
 274 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 275              	.LCFI2:
 276              		.cfi_def_cfa_offset 24
 277              		.cfi_offset 4, -24
 278              		.cfi_offset 5, -20
 279              		.cfi_offset 6, -16
 280              		.cfi_offset 7, -12
 281              		.cfi_offset 8, -8
 282              		.cfi_offset 14, -4
 283 0004 0446     		mov	r4, r0
  88:Src/function.c ****   volatile int i;
  89:Src/function.c ****   switch( *adcount ) {
 284              		.loc 1 89 0
 285 0006 B0F90030 		ldrsh	r3, [r0]
 286 000a 012B     		cmp	r3, #1
 287 000c 25D0     		beq	.L27
 288 000e 022B     		cmp	r3, #2
 289 0010 64D0     		beq	.L28
 290 0012 0BB1     		cbz	r3, .L31
 291              	.LVL7:
 292              	.L25:
  90:Src/function.c ****     case OFF_VALUE:
  91:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
  92:Src/function.c ****       ADCOffData[0] = ADCBuff[0];
  93:Src/function.c ****       ADCOffData[1] = ADCBuff[1];
  94:Src/function.c ****       ADCOffData[2] = ADCBuff[2];
  95:Src/function.c ****       ADCOffData[3] = ADCBuff[3];
  96:Src/function.c **** 
  97:Src/function.c ****       HAL_GPIO_WritePin( paluse2_GPIO_Port, paluse2_Pin ,GPIO_PIN_SET );
  98:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_SET );
  99:Src/function.c ****       /*
 100:Src/function.c ****       for( i = 0; i < 50; i++ ){
 101:Src/function.c **** 
 102:Src/function.c ****       }
 103:Src/function.c ****       */
 104:Src/function.c **** 
 105:Src/function.c ****       *adcount = LEFT_VALUE;
 106:Src/function.c **** 
 107:Src/function.c ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 108:Src/function.c ****       break;
 109:Src/function.c **** 
 110:Src/function.c ****     case LEFT_VALUE:
 111:Src/function.c ****       HAL_GPIO_WritePin( paluse2_GPIO_Port, paluse2_Pin ,GPIO_PIN_RESET );
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 8


 112:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_RESET );
 113:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 114:Src/function.c **** 
 115:Src/function.c ****       ADCOntData[2] = ADCBuff[2];
 116:Src/function.c ****       ADCOntData[3] = ADCBuff[3];
 117:Src/function.c **** 
 118:Src/function.c ****       sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
 119:Src/function.c ****       sen_l.now = ADCOntData[2] - ADCOffData[2];
 120:Src/function.c **** 
 121:Src/function.c ****       sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 122:Src/function.c ****       sen_fl.now = ADCOntData[3] - ADCOffData[3];
 123:Src/function.c **** 
 124:Src/function.c ****       HAL_GPIO_WritePin( paluse0_GPIO_Port, paluse0_Pin ,GPIO_PIN_SET );
 125:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_SET );
 126:Src/function.c ****       /*
 127:Src/function.c ****       for( i = 0; i < 50; i++ ){
 128:Src/function.c **** 
 129:Src/function.c ****       }
 130:Src/function.c ****       */
 131:Src/function.c ****       *adcount = RIGHT_VALUE;
 132:Src/function.c **** 
 133:Src/function.c ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 134:Src/function.c ****       break;
 135:Src/function.c **** 
 136:Src/function.c ****     case RIGHT_VALUE:
 137:Src/function.c ****       HAL_GPIO_WritePin( paluse0_GPIO_Port, paluse0_Pin ,GPIO_PIN_RESET );
 138:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_RESET );
 139:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 140:Src/function.c **** 
 141:Src/function.c ****       ADCOntData[0] = ADCBuff[0];
 142:Src/function.c ****       ADCOntData[1] = ADCBuff[1];
 143:Src/function.c **** 
 144:Src/function.c ****       sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 145:Src/function.c ****       sen_fr.now = ADCOntData[0] - ADCOffData[0];
 146:Src/function.c **** 
 147:Src/function.c ****       sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 148:Src/function.c ****       sen_r.now = ADCOntData[1] - ADCOffData[1];
 149:Src/function.c ****     /*
 150:Src/function.c ****       for( i = 0; i < 50; i++ ){
 151:Src/function.c **** 
 152:Src/function.c ****       }
 153:Src/function.c ****     */
 154:Src/function.c ****       *adcount = FINISH_CONVERT;
 155:Src/function.c ****       break;
 156:Src/function.c **** 
 157:Src/function.c ****     default:
 158:Src/function.c ****       break;
 159:Src/function.c ****   }
 160:Src/function.c **** }
 293              		.loc 1 160 0
 294 0014 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 295              	.LVL8:
 296              	.L31:
  91:Src/function.c ****       ADCOffData[0] = ADCBuff[0];
 297              		.loc 1 91 0
 298 0018 464E     		ldr	r6, .L32
 299 001a 3046     		mov	r0, r6
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 9


 300              	.LVL9:
 301 001c FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 302              	.LVL10:
  92:Src/function.c ****       ADCOffData[1] = ADCBuff[1];
 303              		.loc 1 92 0
 304 0020 454D     		ldr	r5, .L32+4
 305 0022 2A88     		ldrh	r2, [r5]
 306 0024 454B     		ldr	r3, .L32+8
 307 0026 1A80     		strh	r2, [r3]	@ movhi
  93:Src/function.c ****       ADCOffData[2] = ADCBuff[2];
 308              		.loc 1 93 0
 309 0028 6A88     		ldrh	r2, [r5, #2]
 310 002a 5A80     		strh	r2, [r3, #2]	@ movhi
  94:Src/function.c ****       ADCOffData[3] = ADCBuff[3];
 311              		.loc 1 94 0
 312 002c AA88     		ldrh	r2, [r5, #4]
 313 002e 9A80     		strh	r2, [r3, #4]	@ movhi
  95:Src/function.c **** 
 314              		.loc 1 95 0
 315 0030 EA88     		ldrh	r2, [r5, #6]
 316 0032 DA80     		strh	r2, [r3, #6]	@ movhi
  97:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_SET );
 317              		.loc 1 97 0
 318 0034 424F     		ldr	r7, .L32+12
 319 0036 0122     		movs	r2, #1
 320 0038 0421     		movs	r1, #4
 321 003a 3846     		mov	r0, r7
 322 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
 323              	.LVL11:
  98:Src/function.c ****       /*
 324              		.loc 1 98 0
 325 0040 0122     		movs	r2, #1
 326 0042 0821     		movs	r1, #8
 327 0044 3846     		mov	r0, r7
 328 0046 FFF7FEFF 		bl	HAL_GPIO_WritePin
 329              	.LVL12:
 105:Src/function.c **** 
 330              		.loc 1 105 0
 331 004a 0123     		movs	r3, #1
 332 004c 2380     		strh	r3, [r4]	@ movhi
 107:Src/function.c ****       break;
 333              		.loc 1 107 0
 334 004e 0822     		movs	r2, #8
 335 0050 2946     		mov	r1, r5
 336 0052 3046     		mov	r0, r6
 337 0054 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 338              	.LVL13:
 108:Src/function.c **** 
 339              		.loc 1 108 0
 340 0058 DCE7     		b	.L25
 341              	.LVL14:
 342              	.L27:
 111:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_RESET );
 343              		.loc 1 111 0
 344 005a 394D     		ldr	r5, .L32+12
 345 005c 0022     		movs	r2, #0
 346 005e 0421     		movs	r1, #4
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 10


 347 0060 2846     		mov	r0, r5
 348              	.LVL15:
 349 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 350              	.LVL16:
 112:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 351              		.loc 1 112 0
 352 0066 0022     		movs	r2, #0
 353 0068 0821     		movs	r1, #8
 354 006a 2846     		mov	r0, r5
 355 006c FFF7FEFF 		bl	HAL_GPIO_WritePin
 356              	.LVL17:
 113:Src/function.c **** 
 357              		.loc 1 113 0
 358 0070 304F     		ldr	r7, .L32
 359 0072 3846     		mov	r0, r7
 360 0074 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 361              	.LVL18:
 115:Src/function.c ****       ADCOntData[3] = ADCBuff[3];
 362              		.loc 1 115 0
 363 0078 2F4E     		ldr	r6, .L32+4
 364 007a B288     		ldrh	r2, [r6, #4]
 365 007c 3149     		ldr	r1, .L32+16
 366 007e 8A80     		strh	r2, [r1, #4]	@ movhi
 116:Src/function.c **** 
 367              		.loc 1 116 0
 368 0080 F388     		ldrh	r3, [r6, #6]
 369 0082 CB80     		strh	r3, [r1, #6]	@ movhi
 118:Src/function.c ****       sen_l.now = ADCOntData[2] - ADCOffData[2];
 370              		.loc 1 118 0
 371 0084 3049     		ldr	r1, .L32+20
 372 0086 B1F90080 		ldrsh	r8, [r1]
 373 008a DFF8B0C0 		ldr	ip, .L32+8
 374 008e BCF804E0 		ldrh	lr, [ip, #4]
 375 0092 AEEB0200 		sub	r0, lr, r2
 376 0096 18FA80F0 		uxtah	r0, r8, r0
 377 009a 0881     		strh	r0, [r1, #8]	@ movhi
 119:Src/function.c **** 
 378              		.loc 1 119 0
 379 009c A2EB0E02 		sub	r2, r2, lr
 380 00a0 0A80     		strh	r2, [r1]	@ movhi
 121:Src/function.c ****       sen_fl.now = ADCOntData[3] - ADCOffData[3];
 381              		.loc 1 121 0
 382 00a2 2A4A     		ldr	r2, .L32+24
 383 00a4 B2F900E0 		ldrsh	lr, [r2]
 384 00a8 BCF80600 		ldrh	r0, [ip, #6]
 385 00ac C11A     		subs	r1, r0, r3
 386 00ae 1EFA81F1 		uxtah	r1, lr, r1
 387 00b2 1181     		strh	r1, [r2, #8]	@ movhi
 122:Src/function.c **** 
 388              		.loc 1 122 0
 389 00b4 1B1A     		subs	r3, r3, r0
 390 00b6 1380     		strh	r3, [r2]	@ movhi
 124:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_SET );
 391              		.loc 1 124 0
 392 00b8 0122     		movs	r2, #1
 393 00ba 1146     		mov	r1, r2
 394 00bc 2846     		mov	r0, r5
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 11


 395 00be FFF7FEFF 		bl	HAL_GPIO_WritePin
 396              	.LVL19:
 125:Src/function.c ****       /*
 397              		.loc 1 125 0
 398 00c2 0122     		movs	r2, #1
 399 00c4 0221     		movs	r1, #2
 400 00c6 2846     		mov	r0, r5
 401 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 402              	.LVL20:
 131:Src/function.c **** 
 403              		.loc 1 131 0
 404 00cc 0223     		movs	r3, #2
 405 00ce 2380     		strh	r3, [r4]	@ movhi
 133:Src/function.c ****       break;
 406              		.loc 1 133 0
 407 00d0 0822     		movs	r2, #8
 408 00d2 3146     		mov	r1, r6
 409 00d4 3846     		mov	r0, r7
 410 00d6 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 411              	.LVL21:
 134:Src/function.c **** 
 412              		.loc 1 134 0
 413 00da 9BE7     		b	.L25
 414              	.LVL22:
 415              	.L28:
 137:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_RESET );
 416              		.loc 1 137 0
 417 00dc 184D     		ldr	r5, .L32+12
 418 00de 0022     		movs	r2, #0
 419 00e0 0121     		movs	r1, #1
 420 00e2 2846     		mov	r0, r5
 421              	.LVL23:
 422 00e4 FFF7FEFF 		bl	HAL_GPIO_WritePin
 423              	.LVL24:
 138:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 424              		.loc 1 138 0
 425 00e8 0022     		movs	r2, #0
 426 00ea 0221     		movs	r1, #2
 427 00ec 2846     		mov	r0, r5
 428 00ee FFF7FEFF 		bl	HAL_GPIO_WritePin
 429              	.LVL25:
 139:Src/function.c **** 
 430              		.loc 1 139 0
 431 00f2 1048     		ldr	r0, .L32
 432 00f4 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 433              	.LVL26:
 141:Src/function.c ****       ADCOntData[1] = ADCBuff[1];
 434              		.loc 1 141 0
 435 00f8 0F4B     		ldr	r3, .L32+4
 436 00fa 1A88     		ldrh	r2, [r3]
 437 00fc 1149     		ldr	r1, .L32+16
 438 00fe 0A80     		strh	r2, [r1]	@ movhi
 142:Src/function.c **** 
 439              		.loc 1 142 0
 440 0100 5B88     		ldrh	r3, [r3, #2]
 441 0102 4B80     		strh	r3, [r1, #2]	@ movhi
 144:Src/function.c ****       sen_fr.now = ADCOntData[0] - ADCOffData[0];
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 12


 442              		.loc 1 144 0
 443 0104 1249     		ldr	r1, .L32+28
 444 0106 B1F90070 		ldrsh	r7, [r1]
 445 010a 0C4D     		ldr	r5, .L32+8
 446 010c 2E88     		ldrh	r6, [r5]
 447 010e B01A     		subs	r0, r6, r2
 448 0110 17FA80F0 		uxtah	r0, r7, r0
 449 0114 0881     		strh	r0, [r1, #8]	@ movhi
 145:Src/function.c **** 
 450              		.loc 1 145 0
 451 0116 921B     		subs	r2, r2, r6
 452 0118 0A80     		strh	r2, [r1]	@ movhi
 147:Src/function.c ****       sen_r.now = ADCOntData[1] - ADCOffData[1];
 453              		.loc 1 147 0
 454 011a 0E4A     		ldr	r2, .L32+32
 455 011c B2F90060 		ldrsh	r6, [r2]
 456 0120 6888     		ldrh	r0, [r5, #2]
 457 0122 C11A     		subs	r1, r0, r3
 458 0124 16FA81F1 		uxtah	r1, r6, r1
 459 0128 1181     		strh	r1, [r2, #8]	@ movhi
 148:Src/function.c ****     /*
 460              		.loc 1 148 0
 461 012a 1B1A     		subs	r3, r3, r0
 462 012c 1380     		strh	r3, [r2]	@ movhi
 154:Src/function.c ****       break;
 463              		.loc 1 154 0
 464 012e 0323     		movs	r3, #3
 465 0130 2380     		strh	r3, [r4]	@ movhi
 466              		.loc 1 160 0
 467 0132 6FE7     		b	.L25
 468              	.L33:
 469              		.align	2
 470              	.L32:
 471 0134 00000000 		.word	hadc1
 472 0138 00000000 		.word	ADCBuff
 473 013c 00000000 		.word	ADCOffData
 474 0140 00080240 		.word	1073874944
 475 0144 00000000 		.word	ADCOntData
 476 0148 00000000 		.word	sen_l
 477 014c 00000000 		.word	sen_fl
 478 0150 00000000 		.word	sen_fr
 479 0154 00000000 		.word	sen_r
 480              		.cfi_endproc
 481              	.LFE131:
 483              		.section	.text.getADSensor2,"ax",%progbits
 484              		.align	1
 485              		.global	getADSensor2
 486              		.syntax unified
 487              		.thumb
 488              		.thumb_func
 489              		.fpu fpv4-sp-d16
 491              	getADSensor2:
 492              	.LFB132:
 161:Src/function.c **** 
 162:Src/function.c **** 
 163:Src/function.c **** void getADSensor2( int16_t *adcount )
 164:Src/function.c **** {
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 13


 493              		.loc 1 164 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 8
 496              		@ frame_needed = 0, uses_anonymous_args = 0
 497              	.LVL27:
 498 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 499              	.LCFI3:
 500              		.cfi_def_cfa_offset 20
 501              		.cfi_offset 4, -20
 502              		.cfi_offset 5, -16
 503              		.cfi_offset 6, -12
 504              		.cfi_offset 7, -8
 505              		.cfi_offset 14, -4
 506 0002 83B0     		sub	sp, sp, #12
 507              	.LCFI4:
 508              		.cfi_def_cfa_offset 32
 509 0004 0446     		mov	r4, r0
 165:Src/function.c ****   volatile int i;
 166:Src/function.c ****   switch( *adcount ) {
 510              		.loc 1 166 0
 511 0006 B0F90030 		ldrsh	r3, [r0]
 512 000a 012B     		cmp	r3, #1
 513 000c 71D0     		beq	.L36
 514 000e 022B     		cmp	r3, #2
 515 0010 2BD0     		beq	.L37
 516 0012 0BB1     		cbz	r3, .L44
 517              	.LVL28:
 518              	.L34:
 167:Src/function.c ****     case OFF_VALUE:
 168:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 169:Src/function.c ****       ADCOffData[0] = ADCBuff[0];
 170:Src/function.c ****       ADCOffData[1] = ADCBuff[1];
 171:Src/function.c ****       ADCOffData[2] = ADCBuff[2];
 172:Src/function.c ****       ADCOffData[3] = ADCBuff[3];
 173:Src/function.c **** 
 174:Src/function.c ****       HAL_GPIO_WritePin( paluse0_GPIO_Port, paluse0_Pin ,GPIO_PIN_SET );
 175:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_SET );
 176:Src/function.c ****       
 177:Src/function.c ****       for( i = 0; i < 100; i++ ){
 178:Src/function.c **** 
 179:Src/function.c ****       }
 180:Src/function.c **** 
 181:Src/function.c ****       *adcount = RIGHT_VALUE;
 182:Src/function.c **** 
 183:Src/function.c ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 184:Src/function.c ****       break;
 185:Src/function.c **** 
 186:Src/function.c **** 
 187:Src/function.c ****     case RIGHT_VALUE:
 188:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 189:Src/function.c ****       HAL_GPIO_WritePin( paluse0_GPIO_Port, paluse0_Pin ,GPIO_PIN_RESET );
 190:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_RESET );
 191:Src/function.c ****       
 192:Src/function.c **** 
 193:Src/function.c ****       ADCOntData[0] = ADCBuff[0];
 194:Src/function.c ****       ADCOntData[1] = ADCBuff[1];
 195:Src/function.c **** 
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 14


 196:Src/function.c ****       sen_fr.diff = sen_fr.now - (ADCOntData[0] - ADCOffData[0]);
 197:Src/function.c ****       sen_fr.now = ADCOntData[0] - ADCOffData[0];
 198:Src/function.c **** 
 199:Src/function.c ****       sen_r.diff = sen_r.now - (ADCOntData[1] - ADCOffData[1]);
 200:Src/function.c ****       sen_r.now = ADCOntData[1] - ADCOffData[1];
 201:Src/function.c **** 
 202:Src/function.c ****       HAL_GPIO_WritePin( paluse2_GPIO_Port, paluse2_Pin ,GPIO_PIN_SET );
 203:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_SET );
 204:Src/function.c ****     
 205:Src/function.c ****       for( i = 0; i < 100; i++ ){
 206:Src/function.c **** 
 207:Src/function.c ****       }
 208:Src/function.c ****       *adcount = LEFT_VALUE;
 209:Src/function.c ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 210:Src/function.c ****       break;
 211:Src/function.c **** 
 212:Src/function.c ****     case LEFT_VALUE:
 213:Src/function.c ****       HAL_ADC_Stop_DMA( &hadc1 );
 214:Src/function.c ****       HAL_GPIO_WritePin( paluse2_GPIO_Port, paluse2_Pin ,GPIO_PIN_RESET );
 215:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_RESET );
 216:Src/function.c ****       
 217:Src/function.c **** 
 218:Src/function.c ****       ADCOntData[2] = ADCBuff[2];
 219:Src/function.c ****       ADCOntData[3] = ADCBuff[3];
 220:Src/function.c **** 
 221:Src/function.c ****       sen_l.diff = sen_l.now - (ADCOntData[2] - ADCOffData[2]);
 222:Src/function.c ****       sen_l.now = ADCOntData[2] - ADCOffData[2];
 223:Src/function.c **** 
 224:Src/function.c ****       sen_fl.diff = sen_fl.now - (ADCOntData[3] - ADCOffData[3]);
 225:Src/function.c ****       sen_fl.now = ADCOntData[3] - ADCOffData[3];
 226:Src/function.c **** 
 227:Src/function.c ****       *adcount = FINISH_CONVERT;
 228:Src/function.c ****       break;
 229:Src/function.c **** 
 230:Src/function.c ****     default:
 231:Src/function.c ****       break;
 232:Src/function.c ****   }
 233:Src/function.c **** }
 519              		.loc 1 233 0
 520 0014 03B0     		add	sp, sp, #12
 521              	.LCFI5:
 522              		.cfi_remember_state
 523              		.cfi_def_cfa_offset 20
 524              		@ sp needed
 525 0016 F0BD     		pop	{r4, r5, r6, r7, pc}
 526              	.LVL29:
 527              	.L44:
 528              	.LCFI6:
 529              		.cfi_restore_state
 168:Src/function.c ****       ADCOffData[0] = ADCBuff[0];
 530              		.loc 1 168 0
 531 0018 4C48     		ldr	r0, .L45
 532              	.LVL30:
 533 001a FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 534              	.LVL31:
 169:Src/function.c ****       ADCOffData[1] = ADCBuff[1];
 535              		.loc 1 169 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 15


 536 001e 4C4A     		ldr	r2, .L45+4
 537 0020 1188     		ldrh	r1, [r2]
 538 0022 4C4B     		ldr	r3, .L45+8
 539 0024 1980     		strh	r1, [r3]	@ movhi
 170:Src/function.c ****       ADCOffData[2] = ADCBuff[2];
 540              		.loc 1 170 0
 541 0026 5188     		ldrh	r1, [r2, #2]
 542 0028 5980     		strh	r1, [r3, #2]	@ movhi
 171:Src/function.c ****       ADCOffData[3] = ADCBuff[3];
 543              		.loc 1 171 0
 544 002a 9188     		ldrh	r1, [r2, #4]
 545 002c 9980     		strh	r1, [r3, #4]	@ movhi
 172:Src/function.c **** 
 546              		.loc 1 172 0
 547 002e D288     		ldrh	r2, [r2, #6]
 548 0030 DA80     		strh	r2, [r3, #6]	@ movhi
 174:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_SET );
 549              		.loc 1 174 0
 550 0032 494D     		ldr	r5, .L45+12
 551 0034 0122     		movs	r2, #1
 552 0036 1146     		mov	r1, r2
 553 0038 2846     		mov	r0, r5
 554 003a FFF7FEFF 		bl	HAL_GPIO_WritePin
 555              	.LVL32:
 175:Src/function.c ****       
 556              		.loc 1 175 0
 557 003e 0122     		movs	r2, #1
 558 0040 0221     		movs	r1, #2
 559 0042 2846     		mov	r0, r5
 560 0044 FFF7FEFF 		bl	HAL_GPIO_WritePin
 561              	.LVL33:
 177:Src/function.c **** 
 562              		.loc 1 177 0
 563 0048 0023     		movs	r3, #0
 564 004a 0193     		str	r3, [sp, #4]
 565 004c 02E0     		b	.L39
 566              	.L40:
 177:Src/function.c **** 
 567              		.loc 1 177 0 is_stmt 0 discriminator 3
 568 004e 019B     		ldr	r3, [sp, #4]
 569 0050 0133     		adds	r3, r3, #1
 570 0052 0193     		str	r3, [sp, #4]
 571              	.L39:
 177:Src/function.c **** 
 572              		.loc 1 177 0 discriminator 1
 573 0054 019B     		ldr	r3, [sp, #4]
 574 0056 632B     		cmp	r3, #99
 575 0058 F9DD     		ble	.L40
 181:Src/function.c **** 
 576              		.loc 1 181 0 is_stmt 1
 577 005a 0223     		movs	r3, #2
 578 005c 2380     		strh	r3, [r4]	@ movhi
 183:Src/function.c ****       break;
 579              		.loc 1 183 0
 580 005e 0822     		movs	r2, #8
 581 0060 3B49     		ldr	r1, .L45+4
 582 0062 3A48     		ldr	r0, .L45
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 16


 583 0064 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 584              	.LVL34:
 184:Src/function.c **** 
 585              		.loc 1 184 0
 586 0068 D4E7     		b	.L34
 587              	.LVL35:
 588              	.L37:
 188:Src/function.c ****       HAL_GPIO_WritePin( paluse0_GPIO_Port, paluse0_Pin ,GPIO_PIN_RESET );
 589              		.loc 1 188 0
 590 006a 3848     		ldr	r0, .L45
 591              	.LVL36:
 592 006c FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 593              	.LVL37:
 189:Src/function.c ****       HAL_GPIO_WritePin( paluse1_GPIO_Port, paluse1_Pin ,GPIO_PIN_RESET );
 594              		.loc 1 189 0
 595 0070 394D     		ldr	r5, .L45+12
 596 0072 0022     		movs	r2, #0
 597 0074 0121     		movs	r1, #1
 598 0076 2846     		mov	r0, r5
 599 0078 FFF7FEFF 		bl	HAL_GPIO_WritePin
 600              	.LVL38:
 190:Src/function.c ****       
 601              		.loc 1 190 0
 602 007c 0022     		movs	r2, #0
 603 007e 0221     		movs	r1, #2
 604 0080 2846     		mov	r0, r5
 605 0082 FFF7FEFF 		bl	HAL_GPIO_WritePin
 606              	.LVL39:
 193:Src/function.c ****       ADCOntData[1] = ADCBuff[1];
 607              		.loc 1 193 0
 608 0086 324B     		ldr	r3, .L45+4
 609 0088 1A88     		ldrh	r2, [r3]
 610 008a 3449     		ldr	r1, .L45+16
 611 008c 0A80     		strh	r2, [r1]	@ movhi
 194:Src/function.c **** 
 612              		.loc 1 194 0
 613 008e 5B88     		ldrh	r3, [r3, #2]
 614 0090 4B80     		strh	r3, [r1, #2]	@ movhi
 196:Src/function.c ****       sen_fr.now = ADCOntData[0] - ADCOffData[0];
 615              		.loc 1 196 0
 616 0092 3349     		ldr	r1, .L45+20
 617 0094 B1F900C0 		ldrsh	ip, [r1]
 618 0098 2E4E     		ldr	r6, .L45+8
 619 009a 3788     		ldrh	r7, [r6]
 620 009c B81A     		subs	r0, r7, r2
 621 009e 1CFA80F0 		uxtah	r0, ip, r0
 622 00a2 0881     		strh	r0, [r1, #8]	@ movhi
 197:Src/function.c **** 
 623              		.loc 1 197 0
 624 00a4 D21B     		subs	r2, r2, r7
 625 00a6 0A80     		strh	r2, [r1]	@ movhi
 199:Src/function.c ****       sen_r.now = ADCOntData[1] - ADCOffData[1];
 626              		.loc 1 199 0
 627 00a8 2E4A     		ldr	r2, .L45+24
 628 00aa B2F90070 		ldrsh	r7, [r2]
 629 00ae 7088     		ldrh	r0, [r6, #2]
 630 00b0 C11A     		subs	r1, r0, r3
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 17


 631 00b2 17FA81F1 		uxtah	r1, r7, r1
 632 00b6 1181     		strh	r1, [r2, #8]	@ movhi
 200:Src/function.c **** 
 633              		.loc 1 200 0
 634 00b8 1B1A     		subs	r3, r3, r0
 635 00ba 1380     		strh	r3, [r2]	@ movhi
 202:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_SET );
 636              		.loc 1 202 0
 637 00bc 0122     		movs	r2, #1
 638 00be 0421     		movs	r1, #4
 639 00c0 2846     		mov	r0, r5
 640 00c2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 641              	.LVL40:
 203:Src/function.c ****     
 642              		.loc 1 203 0
 643 00c6 0122     		movs	r2, #1
 644 00c8 0821     		movs	r1, #8
 645 00ca 2846     		mov	r0, r5
 646 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 647              	.LVL41:
 205:Src/function.c **** 
 648              		.loc 1 205 0
 649 00d0 0023     		movs	r3, #0
 650 00d2 0193     		str	r3, [sp, #4]
 651 00d4 02E0     		b	.L41
 652              	.L42:
 205:Src/function.c **** 
 653              		.loc 1 205 0 is_stmt 0 discriminator 3
 654 00d6 019B     		ldr	r3, [sp, #4]
 655 00d8 0133     		adds	r3, r3, #1
 656 00da 0193     		str	r3, [sp, #4]
 657              	.L41:
 205:Src/function.c **** 
 658              		.loc 1 205 0 discriminator 1
 659 00dc 019B     		ldr	r3, [sp, #4]
 660 00de 632B     		cmp	r3, #99
 661 00e0 F9DD     		ble	.L42
 208:Src/function.c ****       HAL_ADC_Start_DMA( &hadc1, (uint32_t *)ADCBuff, sizeof(ADCBuff) );
 662              		.loc 1 208 0 is_stmt 1
 663 00e2 0123     		movs	r3, #1
 664 00e4 2380     		strh	r3, [r4]	@ movhi
 209:Src/function.c ****       break;
 665              		.loc 1 209 0
 666 00e6 0822     		movs	r2, #8
 667 00e8 1949     		ldr	r1, .L45+4
 668 00ea 1848     		ldr	r0, .L45
 669 00ec FFF7FEFF 		bl	HAL_ADC_Start_DMA
 670              	.LVL42:
 210:Src/function.c **** 
 671              		.loc 1 210 0
 672 00f0 90E7     		b	.L34
 673              	.LVL43:
 674              	.L36:
 213:Src/function.c ****       HAL_GPIO_WritePin( paluse2_GPIO_Port, paluse2_Pin ,GPIO_PIN_RESET );
 675              		.loc 1 213 0
 676 00f2 1648     		ldr	r0, .L45
 677              	.LVL44:
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 18


 678 00f4 FFF7FEFF 		bl	HAL_ADC_Stop_DMA
 679              	.LVL45:
 214:Src/function.c ****       HAL_GPIO_WritePin( paluse3_GPIO_Port, paluse3_Pin ,GPIO_PIN_RESET );
 680              		.loc 1 214 0
 681 00f8 174D     		ldr	r5, .L45+12
 682 00fa 0022     		movs	r2, #0
 683 00fc 0421     		movs	r1, #4
 684 00fe 2846     		mov	r0, r5
 685 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 686              	.LVL46:
 215:Src/function.c ****       
 687              		.loc 1 215 0
 688 0104 0022     		movs	r2, #0
 689 0106 0821     		movs	r1, #8
 690 0108 2846     		mov	r0, r5
 691 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 692              	.LVL47:
 218:Src/function.c ****       ADCOntData[3] = ADCBuff[3];
 693              		.loc 1 218 0
 694 010e 104B     		ldr	r3, .L45+4
 695 0110 9A88     		ldrh	r2, [r3, #4]
 696 0112 1249     		ldr	r1, .L45+16
 697 0114 8A80     		strh	r2, [r1, #4]	@ movhi
 219:Src/function.c **** 
 698              		.loc 1 219 0
 699 0116 DB88     		ldrh	r3, [r3, #6]
 700 0118 CB80     		strh	r3, [r1, #6]	@ movhi
 221:Src/function.c ****       sen_l.now = ADCOntData[2] - ADCOffData[2];
 701              		.loc 1 221 0
 702 011a 1349     		ldr	r1, .L45+28
 703 011c B1F90070 		ldrsh	r7, [r1]
 704 0120 0C4D     		ldr	r5, .L45+8
 705 0122 AE88     		ldrh	r6, [r5, #4]
 706 0124 B01A     		subs	r0, r6, r2
 707 0126 17FA80F0 		uxtah	r0, r7, r0
 708 012a 0881     		strh	r0, [r1, #8]	@ movhi
 222:Src/function.c **** 
 709              		.loc 1 222 0
 710 012c 921B     		subs	r2, r2, r6
 711 012e 0A80     		strh	r2, [r1]	@ movhi
 224:Src/function.c ****       sen_fl.now = ADCOntData[3] - ADCOffData[3];
 712              		.loc 1 224 0
 713 0130 0E4A     		ldr	r2, .L45+32
 714 0132 B2F90060 		ldrsh	r6, [r2]
 715 0136 E888     		ldrh	r0, [r5, #6]
 716 0138 C11A     		subs	r1, r0, r3
 717 013a 16FA81F1 		uxtah	r1, r6, r1
 718 013e 1181     		strh	r1, [r2, #8]	@ movhi
 225:Src/function.c **** 
 719              		.loc 1 225 0
 720 0140 1B1A     		subs	r3, r3, r0
 721 0142 1380     		strh	r3, [r2]	@ movhi
 227:Src/function.c ****       break;
 722              		.loc 1 227 0
 723 0144 0323     		movs	r3, #3
 724 0146 2380     		strh	r3, [r4]	@ movhi
 725              		.loc 1 233 0
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 19


 726 0148 64E7     		b	.L34
 727              	.L46:
 728 014a 00BF     		.align	2
 729              	.L45:
 730 014c 00000000 		.word	hadc1
 731 0150 00000000 		.word	ADCBuff
 732 0154 00000000 		.word	ADCOffData
 733 0158 00080240 		.word	1073874944
 734 015c 00000000 		.word	ADCOntData
 735 0160 00000000 		.word	sen_fr
 736 0164 00000000 		.word	sen_r
 737 0168 00000000 		.word	sen_l
 738 016c 00000000 		.word	sen_fl
 739              		.cfi_endproc
 740              	.LFE132:
 742              		.section	.bss.ctr_irled,"aw",%nobits
 743              		.set	.LANCHOR0,. + 0
 746              	ctr_irled:
 747 0000 00       		.space	1
 748              		.text
 749              	.Letext0:
 750              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 751              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 752              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 753              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 754              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\lib\\gcc\\arm-none-eabi
 755              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2017-q4-major\\arm-none-eabi\\include\
 756              		.file 8 "Inc/global.h"
 757              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 758              		.file 10 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 759              		.file 11 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 760              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 761              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 762              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 763              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 764              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 765              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 766              		.file 18 "Inc/adc.h"
 767              		.file 19 "Inc/tim.h"
 768              		.file 20 "Inc/spi.h"
ARM GAS  C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 function.c
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:18     .text.setIrledPwm:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:25     .text.setIrledPwm:00000000 setIrledPwm
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:42     .text.setIrledPwm:00000008 $d
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:47     .text.setSensorConstant:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:54     .text.setSensorConstant:00000000 setSensorConstant
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:72     .text.update_sensor_data:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:79     .text.update_sensor_data:00000000 update_sensor_data
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:149    .text.update_sensor_data:0000006c $d
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:158    .text.adcStart:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:165    .text.adcStart:00000000 adcStart
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:195    .text.adcStart:0000001c $d
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:202    .text.adcCheckConvert:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:209    .text.adcCheckConvert:00000000 adcCheckConvert
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:252    .text.adcCheckConvert:0000002c $d
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:260    .text.getADSensor:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:267    .text.getADSensor:00000000 getADSensor
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:471    .text.getADSensor:00000134 $d
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:484    .text.getADSensor2:00000000 $t
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:491    .text.getADSensor2:00000000 getADSensor2
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:730    .text.getADSensor2:0000014c $d
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:746    .bss.ctr_irled:00000000 ctr_irled
C:\Users\kotaro\AppData\Local\Temp\ccxzD8ui.s:747    .bss.ctr_irled:00000000 $d

UNDEFINED SYMBOLS
sen_fl
sen_fr
sen_front
sen_l
sen_r
HAL_ADC_Start_DMA
adc_counter
ADCBuff
hadc1
HAL_ADC_Stop_DMA
HAL_GPIO_WritePin
ADCOffData
ADCOntData
